[package]
name = "fusion-blossom"
version = "0.0.1"
authors = ["Yue Wu <wuyue16pku@gmail.com>"]
edition = "2021"
license = "MIT"
description = "A fast minimum-weight perfect matching solver for quantum error correction"
readme = "README.md"

[lib]
name = "fusion_blossom"
path = "src/lib.rs"

[[bin]]
name = "fusion_blossom"
path = "src/main.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

# profiling: https://github.com/flamegraph-rs/flamegraph
# enable the following debug configuration, and then run `cargo flamegraph -- ...` which is equivalent to `cargo run --release -- ...`
# example:
# cargo run --release -- benchmark 15 -r 20 -n 10000 0.005 --code-type phenomenological-planar-code --primal-dual-type error-pattern-logger --verifier none --primal-dual-config '{"filename":"visualize/data/tmp/flamegraph-test.syndromes"}'
# cargo flamegraph -o visualize/data/tmp/flamegraph-test.svg --root -- benchmark 15 -r 20 -n 10000 0.005 --code-type error-pattern-reader --code-config '{"filename":"visualize/data/tmp/flamegraph-test.syndromes"}' --primal-dual-type parallel --partition-strategy phenomenological-planar-code-time-partition --partition-config '{"partition_num":1,"enable_tree_fusion":true}' --verifier none --benchmark-profiler-output visualize/data/tmp/flamegraph-test.profile
# cargo flamegraph -o visualize/data/tmp/flamegraph-test.svg --root -- benchmark 15 -r 20 -n 10000 0.005 --code-type error-pattern-reader --code-config '{"filename":"visualize/data/tmp/flamegraph-test.syndromes"}' --primal-dual-type parallel --partition-strategy phenomenological-planar-code-time-partition --partition-config '{"partition_num":4,"enable_tree_fusion":true}' --verifier none --benchmark-profiler-output visualize/data/tmp/flamegraph-test.profile
# cargo flamegraph -o visualize/data/tmp/flamegraph-test.svg --root -- benchmark 15 -r 20 -n 10000 0.005 --code-type error-pattern-reader --code-config '{"filename":"visualize/data/tmp/flamegraph-test.syndromes"}' --primal-dual-type parallel --partition-strategy phenomenological-planar-code-time-partition --partition-config '{"partition_num":100,"enable_tree_fusion":true}' --verifier none --benchmark-profiler-output visualize/data/tmp/flamegraph-test.profile
# and then visit: http://localhost:8066/partition-profile.html?filename=tmp/flamegraph-test.profile

# embed debug symbols
[profile.release]
debug = true

[features]
# to enable a feature, use `--features xxx`
default = []
blossom_v = []  # automatically enabled when file `blossomV/PerfectMatching.h` exists
i32_weight = []  # use i32 instead of i64 as weight type, to be the same as blossom V library
u32_index = []  # use u32 instead of usize as index type, to save memory by at most half
ordered_conflicts = []  # sort conflict events, by default do not sort for better performance
disable_visualizer = []  # disable all visualizer behavior
unsafe_pointer = []  # use raw pointers to access data when appropriate; fusion blossom requires very little synchronization

[dependencies]
rand_xoshiro = "0.6.0"
libc = "0.2.124"
cfg-if = "1.0.0"
priority-queue = "1.2.1"
parking_lot = { version = "0.12.1", features = ["hardware-lock-elision"] }
serde = { version = "1.0.117", features = ["derive", "rc"] }
serde_json = "1.0.59"
chrono = "0.4.19"
derivative = "2.2.0"
urlencoding = "2.1.0"
clap = { version = "3.2.18", features = ["cargo", "derive"] }
pbr = "1.0.4"
rayon = "1.5.3"
weak-table = "0.3.2"
rand = "0.8.5"
core_affinity = "0.5.10"

[build-dependencies]
cc = "1.0.66"

[package.metadata.docs.rs]
rustdoc-args = [ "--html-in-header", "katex-header.html" ]
# to run locally: `RUSTDOCFLAGS="--html-in-header katex-header.html" cargo doc --no-deps`
