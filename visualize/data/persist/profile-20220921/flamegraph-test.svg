<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="501.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="81862"><g><title>libsystem_kernel.dylib`madvise (39 samples, 0.05%)</title><rect x="0.0537%" y="277" width="0.0476%" height="15" fill="rgb(227,0,7)" fg:x="44" fg:w="39"/><text x="0.3037%" y="287.50"></text></g><g><title>fusion_blossom`alloc::sync::Arc&lt;T&gt;::drop_slow (69 samples, 0.08%)</title><rect x="0.0183%" y="325" width="0.0843%" height="15" fill="rgb(217,0,24)" fg:x="15" fg:w="69"/><text x="0.2683%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (40 samples, 0.05%)</title><rect x="0.0537%" y="309" width="0.0489%" height="15" fill="rgb(221,193,54)" fg:x="44" fg:w="40"/><text x="0.3037%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (40 samples, 0.05%)</title><rect x="0.0537%" y="293" width="0.0489%" height="15" fill="rgb(248,212,6)" fg:x="44" fg:w="40"/><text x="0.3037%" y="303.50"></text></g><g><title>fusion_blossom`fusion_blossom::util::PartitionInfo::partition_syndrome (203 samples, 0.25%)</title><rect x="0.1026%" y="325" width="0.2480%" height="15" fill="rgb(208,68,35)" fg:x="84" fg:w="203"/><text x="0.3526%" y="335.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.01%)</title><rect x="0.3372%" y="309" width="0.0134%" height="15" fill="rgb(232,128,0)" fg:x="276" fg:w="11"/><text x="0.5872%" y="319.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="0.3372%" y="293" width="0.0134%" height="15" fill="rgb(207,160,47)" fg:x="276" fg:w="11"/><text x="0.5872%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.01%)</title><rect x="0.3384%" y="277" width="0.0122%" height="15" fill="rgb(228,23,34)" fg:x="277" fg:w="10"/><text x="0.5884%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (10 samples, 0.01%)</title><rect x="0.3384%" y="261" width="0.0122%" height="15" fill="rgb(218,30,26)" fg:x="277" fg:w="10"/><text x="0.5884%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="0.3396%" y="245" width="0.0110%" height="15" fill="rgb(220,122,19)" fg:x="278" fg:w="9"/><text x="0.5896%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (91 samples, 0.11%)</title><rect x="0.3506%" y="325" width="0.1112%" height="15" fill="rgb(250,228,42)" fg:x="287" fg:w="91"/><text x="0.6006%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (25 samples, 0.03%)</title><rect x="0.4312%" y="309" width="0.0305%" height="15" fill="rgb(240,193,28)" fg:x="353" fg:w="25"/><text x="0.6812%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (117 samples, 0.14%)</title><rect x="0.5118%" y="309" width="0.1429%" height="15" fill="rgb(216,20,37)" fg:x="419" fg:w="117"/><text x="0.7618%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`madvise (117 samples, 0.14%)</title><rect x="0.5118%" y="293" width="0.1429%" height="15" fill="rgb(206,188,39)" fg:x="419" fg:w="117"/><text x="0.7618%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (155 samples, 0.19%)</title><rect x="0.4666%" y="325" width="0.1893%" height="15" fill="rgb(217,207,13)" fg:x="382" fg:w="155"/><text x="0.7166%" y="335.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::mwpm_solver::SolverParallel as fusion_blossom::mwpm_solver::PrimalDualSolver&gt;::solve_visualizer (546 samples, 0.67%)</title><rect x="0.0000%" y="341" width="0.6670%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="546"/><text x="0.2500%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (9 samples, 0.01%)</title><rect x="0.6560%" y="325" width="0.0110%" height="15" fill="rgb(225,20,46)" fg:x="537" fg:w="9"/><text x="0.9060%" y="335.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$free (22 samples, 0.03%)</title><rect x="0.6670%" y="341" width="0.0269%" height="15" fill="rgb(210,31,41)" fg:x="546" fg:w="22"/><text x="0.9170%" y="351.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (26 samples, 0.03%)</title><rect x="0.6951%" y="341" width="0.0318%" height="15" fill="rgb(221,200,47)" fg:x="569" fg:w="26"/><text x="0.9451%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (370 samples, 0.45%)</title><rect x="1.0188%" y="325" width="0.4520%" height="15" fill="rgb(226,26,5)" fg:x="834" fg:w="370"/><text x="1.2688%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (289 samples, 0.35%)</title><rect x="1.1177%" y="309" width="0.3530%" height="15" fill="rgb(249,33,26)" fg:x="915" fg:w="289"/><text x="1.3677%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_large (64 samples, 0.08%)</title><rect x="1.4708%" y="325" width="0.0782%" height="15" fill="rgb(235,183,28)" fg:x="1204" fg:w="64"/><text x="1.7208%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (64 samples, 0.08%)</title><rect x="1.4708%" y="309" width="0.0782%" height="15" fill="rgb(221,5,38)" fg:x="1204" fg:w="64"/><text x="1.7208%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (64 samples, 0.08%)</title><rect x="1.4708%" y="293" width="0.0782%" height="15" fill="rgb(247,18,42)" fg:x="1204" fg:w="64"/><text x="1.7208%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (11 samples, 0.01%)</title><rect x="1.5538%" y="325" width="0.0134%" height="15" fill="rgb(241,131,45)" fg:x="1272" fg:w="11"/><text x="1.8038%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (230 samples, 0.28%)</title><rect x="1.5673%" y="325" width="0.2810%" height="15" fill="rgb(249,31,29)" fg:x="1283" fg:w="230"/><text x="1.8173%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (84 samples, 0.10%)</title><rect x="1.7456%" y="309" width="0.1026%" height="15" fill="rgb(225,111,53)" fg:x="1429" fg:w="84"/><text x="1.9956%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`madvise (84 samples, 0.10%)</title><rect x="1.7456%" y="293" width="0.1026%" height="15" fill="rgb(238,160,17)" fg:x="1429" fg:w="84"/><text x="1.9956%" y="303.50"></text></g><g><title>fusion_blossom`core::ptr::drop_in_place&lt;fusion_blossom::example::ErrorPatternReader&gt; (926 samples, 1.13%)</title><rect x="0.7329%" y="341" width="1.1312%" height="15" fill="rgb(214,148,48)" fg:x="600" fg:w="926"/><text x="0.9829%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (13 samples, 0.02%)</title><rect x="1.8482%" y="325" width="0.0159%" height="15" fill="rgb(232,36,49)" fg:x="1513" fg:w="13"/><text x="2.0982%" y="335.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$free (39 samples, 0.05%)</title><rect x="1.8678%" y="293" width="0.0476%" height="15" fill="rgb(209,103,24)" fg:x="1529" fg:w="39"/><text x="2.1178%" y="303.50"></text></g><g><title>fusion_blossom`__rdl_dealloc (10 samples, 0.01%)</title><rect x="1.9154%" y="293" width="0.0122%" height="15" fill="rgb(229,88,8)" fg:x="1568" fg:w="10"/><text x="2.1654%" y="303.50"></text></g><g><title>fusion_blossom`alloc::sync::Arc&lt;T&gt;::drop_slow (19 samples, 0.02%)</title><rect x="1.9276%" y="293" width="0.0232%" height="15" fill="rgb(213,181,19)" fg:x="1578" fg:w="19"/><text x="2.1776%" y="303.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$free (27 samples, 0.03%)</title><rect x="2.1597%" y="277" width="0.0330%" height="15" fill="rgb(254,191,54)" fg:x="1768" fg:w="27"/><text x="2.4097%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (204 samples, 0.25%)</title><rect x="3.8431%" y="245" width="0.2492%" height="15" fill="rgb(241,83,37)" fg:x="3146" fg:w="204"/><text x="4.0931%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (496 samples, 0.61%)</title><rect x="3.4888%" y="261" width="0.6059%" height="15" fill="rgb(233,36,39)" fg:x="2856" fg:w="496"/><text x="3.7388%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.01%)</title><rect x="4.0947%" y="261" width="0.0122%" height="15" fill="rgb(226,3,54)" fg:x="3352" fg:w="10"/><text x="4.3447%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.01%)</title><rect x="4.0947%" y="245" width="0.0122%" height="15" fill="rgb(245,192,40)" fg:x="3352" fg:w="10"/><text x="4.3447%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (32 samples, 0.04%)</title><rect x="4.1069%" y="261" width="0.0391%" height="15" fill="rgb(238,167,29)" fg:x="3362" fg:w="32"/><text x="4.3569%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (761 samples, 0.93%)</title><rect x="4.1460%" y="261" width="0.9296%" height="15" fill="rgb(232,182,51)" fg:x="3394" fg:w="761"/><text x="4.3960%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (360 samples, 0.44%)</title><rect x="4.6359%" y="245" width="0.4398%" height="15" fill="rgb(231,60,39)" fg:x="3795" fg:w="360"/><text x="4.8859%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (357 samples, 0.44%)</title><rect x="4.6395%" y="229" width="0.4361%" height="15" fill="rgb(208,69,12)" fg:x="3798" fg:w="357"/><text x="4.8895%" y="239.50"></text></g><g><title>fusion_blossom`alloc::sync::Arc&lt;T&gt;::drop_slow (2,398 samples, 2.93%)</title><rect x="2.1976%" y="277" width="2.9293%" height="15" fill="rgb(235,93,37)" fg:x="1799" fg:w="2398"/><text x="2.4476%" y="287.50">fu..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (42 samples, 0.05%)</title><rect x="5.0756%" y="261" width="0.0513%" height="15" fill="rgb(213,116,39)" fg:x="4155" fg:w="42"/><text x="5.3256%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.01%)</title><rect x="5.1269%" y="277" width="0.0134%" height="15" fill="rgb(222,207,29)" fg:x="4197" fg:w="11"/><text x="5.3769%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (35 samples, 0.04%)</title><rect x="5.1404%" y="277" width="0.0428%" height="15" fill="rgb(206,96,30)" fg:x="4208" fg:w="35"/><text x="5.3904%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (165 samples, 0.20%)</title><rect x="5.6070%" y="261" width="0.2016%" height="15" fill="rgb(218,138,4)" fg:x="4590" fg:w="165"/><text x="5.8570%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (513 samples, 0.63%)</title><rect x="5.1831%" y="277" width="0.6267%" height="15" fill="rgb(250,191,14)" fg:x="4243" fg:w="513"/><text x="5.4331%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (141 samples, 0.17%)</title><rect x="5.8122%" y="277" width="0.1722%" height="15" fill="rgb(239,60,40)" fg:x="4758" fg:w="141"/><text x="6.0622%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (558 samples, 0.68%)</title><rect x="6.2618%" y="245" width="0.6816%" height="15" fill="rgb(206,27,48)" fg:x="5126" fg:w="558"/><text x="6.5118%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (788 samples, 0.96%)</title><rect x="5.9845%" y="277" width="0.9626%" height="15" fill="rgb(225,35,8)" fg:x="4899" fg:w="788"/><text x="6.2345%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (561 samples, 0.69%)</title><rect x="6.2618%" y="261" width="0.6853%" height="15" fill="rgb(250,213,24)" fg:x="5126" fg:w="561"/><text x="6.5118%" y="271.50"></text></g><g><title>fusion_blossom`core::ptr::drop_in_place&lt;fusion_blossom::dual_module_serial::DualModuleSerial&gt; (4,118 samples, 5.03%)</title><rect x="1.9508%" y="293" width="5.0304%" height="15" fill="rgb(247,123,22)" fg:x="1597" fg:w="4118"/><text x="2.2008%" y="303.50">fusion..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (28 samples, 0.03%)</title><rect x="6.9471%" y="277" width="0.0342%" height="15" fill="rgb(231,138,38)" fg:x="5687" fg:w="28"/><text x="7.1971%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (48 samples, 0.06%)</title><rect x="6.9813%" y="293" width="0.0586%" height="15" fill="rgb(231,145,46)" fg:x="5715" fg:w="48"/><text x="7.2313%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (62 samples, 0.08%)</title><rect x="7.0399%" y="293" width="0.0757%" height="15" fill="rgb(251,118,11)" fg:x="5763" fg:w="62"/><text x="7.2899%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (36 samples, 0.04%)</title><rect x="7.1156%" y="293" width="0.0440%" height="15" fill="rgb(217,147,25)" fg:x="5825" fg:w="36"/><text x="7.3656%" y="303.50"></text></g><g><title>fusion_blossom`core::ptr::drop_in_place&lt;fusion_blossom::dual_module_parallel::DualModuleParallel&lt;fusion_blossom::dual_module_serial::DualModuleSerial&gt;&gt; (4,354 samples, 5.32%)</title><rect x="1.8678%" y="325" width="5.3187%" height="15" fill="rgb(247,81,37)" fg:x="1529" fg:w="4354"/><text x="2.1178%" y="335.50">fusion_..</text></g><g><title>fusion_blossom`alloc::sync::Arc&lt;T&gt;::drop_slow (4,354 samples, 5.32%)</title><rect x="1.8678%" y="309" width="5.3187%" height="15" fill="rgb(209,12,38)" fg:x="1529" fg:w="4354"/><text x="2.1178%" y="319.50">fusion_..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (22 samples, 0.03%)</title><rect x="7.1596%" y="293" width="0.0269%" height="15" fill="rgb(227,1,9)" fg:x="5861" fg:w="22"/><text x="7.4096%" y="303.50"></text></g><g><title>fusion_blossom`alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.02%)</title><rect x="7.1877%" y="293" width="0.0208%" height="15" fill="rgb(248,47,43)" fg:x="5884" fg:w="17"/><text x="7.4377%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (12 samples, 0.01%)</title><rect x="7.1938%" y="277" width="0.0147%" height="15" fill="rgb(221,10,30)" fg:x="5889" fg:w="12"/><text x="7.4438%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (11 samples, 0.01%)</title><rect x="7.1950%" y="261" width="0.0134%" height="15" fill="rgb(210,229,1)" fg:x="5890" fg:w="11"/><text x="7.4450%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.01%)</title><rect x="7.1950%" y="245" width="0.0134%" height="15" fill="rgb(222,148,37)" fg:x="5890" fg:w="11"/><text x="7.4450%" y="255.50"></text></g><g><title>fusion_blossom`core::ptr::drop_in_place&lt;fusion_blossom::primal_module_parallel::PrimalModuleParallel&gt; (22 samples, 0.03%)</title><rect x="7.1865%" y="325" width="0.0269%" height="15" fill="rgb(234,67,33)" fg:x="5883" fg:w="22"/><text x="7.4365%" y="335.50"></text></g><g><title>fusion_blossom`alloc::sync::Arc&lt;T&gt;::drop_slow (22 samples, 0.03%)</title><rect x="7.1865%" y="309" width="0.0269%" height="15" fill="rgb(247,98,35)" fg:x="5883" fg:w="22"/><text x="7.4365%" y="319.50"></text></g><g><title>fusion_blossom`core::ptr::drop_in_place&lt;fusion_blossom::mwpm_solver::SolverParallel&gt; (4,388 samples, 5.36%)</title><rect x="1.8641%" y="341" width="5.3602%" height="15" fill="rgb(247,138,52)" fg:x="1526" fg:w="4388"/><text x="2.1141%" y="351.50">fusion_..</text></g><g><title>fusion_blossom`core::str::converts::from_utf8 (138 samples, 0.17%)</title><rect x="8.1979%" y="309" width="0.1686%" height="15" fill="rgb(213,79,30)" fg:x="6711" fg:w="138"/><text x="8.4479%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`read (356 samples, 0.43%)</title><rect x="8.3751%" y="293" width="0.4349%" height="15" fill="rgb(246,177,23)" fg:x="6856" fg:w="356"/><text x="8.6251%" y="303.50"></text></g><g><title>fusion_blossom`std::io::append_to_string (420 samples, 0.51%)</title><rect x="8.3665%" y="309" width="0.5131%" height="15" fill="rgb(230,62,27)" fg:x="6849" fg:w="420"/><text x="8.6165%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memchr (57 samples, 0.07%)</title><rect x="8.8099%" y="293" width="0.0696%" height="15" fill="rgb(216,154,8)" fg:x="7212" fg:w="57"/><text x="9.0599%" y="303.50"></text></g><g><title>fusion_blossom`&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (767 samples, 0.94%)</title><rect x="8.1979%" y="325" width="0.9369%" height="15" fill="rgb(244,35,45)" fg:x="6711" fg:w="767"/><text x="8.4479%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (209 samples, 0.26%)</title><rect x="8.8796%" y="309" width="0.2553%" height="15" fill="rgb(251,115,12)" fg:x="7269" fg:w="209"/><text x="9.1296%" y="319.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$malloc (17 samples, 0.02%)</title><rect x="9.2668%" y="309" width="0.0208%" height="15" fill="rgb(240,54,50)" fg:x="7586" fg:w="17"/><text x="9.5168%" y="319.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$realloc (14 samples, 0.02%)</title><rect x="9.2876%" y="309" width="0.0171%" height="15" fill="rgb(233,84,52)" fg:x="7603" fg:w="14"/><text x="9.5376%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (33 samples, 0.04%)</title><rect x="9.5392%" y="245" width="0.0403%" height="15" fill="rgb(207,117,47)" fg:x="7809" fg:w="33"/><text x="9.7892%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (183 samples, 0.22%)</title><rect x="9.4464%" y="261" width="0.2235%" height="15" fill="rgb(249,43,39)" fg:x="7733" fg:w="183"/><text x="9.6964%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (74 samples, 0.09%)</title><rect x="9.5795%" y="245" width="0.0904%" height="15" fill="rgb(209,38,44)" fg:x="7842" fg:w="74"/><text x="9.8295%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (14 samples, 0.02%)</title><rect x="9.6699%" y="261" width="0.0171%" height="15" fill="rgb(236,212,23)" fg:x="7916" fg:w="14"/><text x="9.9199%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (288 samples, 0.35%)</title><rect x="9.3364%" y="293" width="0.3518%" height="15" fill="rgb(242,79,21)" fg:x="7643" fg:w="288"/><text x="9.5864%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (233 samples, 0.28%)</title><rect x="9.4036%" y="277" width="0.2846%" height="15" fill="rgb(211,96,35)" fg:x="7698" fg:w="233"/><text x="9.6536%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (19 samples, 0.02%)</title><rect x="9.6883%" y="293" width="0.0232%" height="15" fill="rgb(253,215,40)" fg:x="7931" fg:w="19"/><text x="9.9383%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (12 samples, 0.01%)</title><rect x="9.7212%" y="293" width="0.0147%" height="15" fill="rgb(211,81,21)" fg:x="7958" fg:w="12"/><text x="9.9712%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (10 samples, 0.01%)</title><rect x="9.8104%" y="277" width="0.0122%" height="15" fill="rgb(208,190,38)" fg:x="8031" fg:w="10"/><text x="10.0604%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (18 samples, 0.02%)</title><rect x="9.8800%" y="261" width="0.0220%" height="15" fill="rgb(235,213,38)" fg:x="8088" fg:w="18"/><text x="10.1300%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (15 samples, 0.02%)</title><rect x="9.9020%" y="261" width="0.0183%" height="15" fill="rgb(237,122,38)" fg:x="8106" fg:w="15"/><text x="10.1520%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.01%)</title><rect x="9.9204%" y="261" width="0.0147%" height="15" fill="rgb(244,218,35)" fg:x="8121" fg:w="12"/><text x="10.1704%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (56 samples, 0.07%)</title><rect x="9.9350%" y="261" width="0.0684%" height="15" fill="rgb(240,68,47)" fg:x="8133" fg:w="56"/><text x="10.1850%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.01%)</title><rect x="10.0376%" y="245" width="0.0110%" height="15" fill="rgb(210,16,53)" fg:x="8217" fg:w="9"/><text x="10.2876%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (17 samples, 0.02%)</title><rect x="10.0486%" y="245" width="0.0208%" height="15" fill="rgb(235,124,12)" fg:x="8226" fg:w="17"/><text x="10.2986%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (62 samples, 0.08%)</title><rect x="10.0694%" y="245" width="0.0757%" height="15" fill="rgb(224,169,11)" fg:x="8243" fg:w="62"/><text x="10.3194%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (23 samples, 0.03%)</title><rect x="10.3797%" y="213" width="0.0281%" height="15" fill="rgb(250,166,2)" fg:x="8497" fg:w="23"/><text x="10.6297%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (353 samples, 0.43%)</title><rect x="10.1720%" y="229" width="0.4312%" height="15" fill="rgb(242,216,29)" fg:x="8327" fg:w="353"/><text x="10.4220%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (160 samples, 0.20%)</title><rect x="10.4078%" y="213" width="0.1955%" height="15" fill="rgb(230,116,27)" fg:x="8520" fg:w="160"/><text x="10.6578%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (383 samples, 0.47%)</title><rect x="10.1451%" y="245" width="0.4679%" height="15" fill="rgb(228,99,48)" fg:x="8305" fg:w="383"/><text x="10.3951%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (568 samples, 0.69%)</title><rect x="10.0034%" y="261" width="0.6939%" height="15" fill="rgb(253,11,6)" fg:x="8189" fg:w="568"/><text x="10.2534%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (69 samples, 0.08%)</title><rect x="10.6130%" y="245" width="0.0843%" height="15" fill="rgb(247,143,39)" fg:x="8688" fg:w="69"/><text x="10.8630%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (746 samples, 0.91%)</title><rect x="9.8226%" y="277" width="0.9113%" height="15" fill="rgb(236,97,10)" fg:x="8041" fg:w="746"/><text x="10.0726%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (30 samples, 0.04%)</title><rect x="10.6973%" y="261" width="0.0366%" height="15" fill="rgb(233,208,19)" fg:x="8757" fg:w="30"/><text x="10.9473%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (55 samples, 0.07%)</title><rect x="10.7339%" y="277" width="0.0672%" height="15" fill="rgb(216,164,2)" fg:x="8787" fg:w="55"/><text x="10.9839%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (16 samples, 0.02%)</title><rect x="10.8011%" y="277" width="0.0195%" height="15" fill="rgb(220,129,5)" fg:x="8842" fg:w="16"/><text x="11.0511%" y="287.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (1,233 samples, 1.51%)</title><rect x="9.3157%" y="309" width="1.5062%" height="15" fill="rgb(242,17,10)" fg:x="7626" fg:w="1233"/><text x="9.5657%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (889 samples, 1.09%)</title><rect x="9.7359%" y="293" width="1.0860%" height="15" fill="rgb(242,107,0)" fg:x="7970" fg:w="889"/><text x="9.9859%" y="303.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,398 samples, 1.71%)</title><rect x="9.1349%" y="325" width="1.7078%" height="15" fill="rgb(251,28,31)" fg:x="7478" fg:w="1398"/><text x="9.3849%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.01%)</title><rect x="10.8304%" y="309" width="0.0122%" height="15" fill="rgb(233,223,10)" fg:x="8866" fg:w="10"/><text x="11.0804%" y="319.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (35 samples, 0.04%)</title><rect x="10.8426%" y="325" width="0.0428%" height="15" fill="rgb(215,21,27)" fg:x="8876" fg:w="35"/><text x="11.0926%" y="335.50"></text></g><g><title>fusion_blossom`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (748 samples, 0.91%)</title><rect x="10.9648%" y="277" width="0.9137%" height="15" fill="rgb(232,23,21)" fg:x="8976" fg:w="748"/><text x="11.2148%" y="287.50"></text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::parse_decimal (22 samples, 0.03%)</title><rect x="12.4954%" y="229" width="0.0269%" height="15" fill="rgb(244,5,23)" fg:x="10229" fg:w="22"/><text x="12.7454%" y="239.50"></text></g><g><title>fusion_blossom`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (807 samples, 0.99%)</title><rect x="12.3525%" y="245" width="0.9858%" height="15" fill="rgb(226,81,46)" fg:x="10112" fg:w="807"/><text x="12.6025%" y="255.50"></text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::parse_integer (668 samples, 0.82%)</title><rect x="12.5223%" y="229" width="0.8160%" height="15" fill="rgb(247,70,30)" fg:x="10251" fg:w="668"/><text x="12.7723%" y="239.50"></text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::parse_decimal (265 samples, 0.32%)</title><rect x="13.0146%" y="213" width="0.3237%" height="15" fill="rgb(212,68,19)" fg:x="10654" fg:w="265"/><text x="13.2646%" y="223.50"></text></g><g><title>fusion_blossom`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (128 samples, 0.16%)</title><rect x="13.3383%" y="245" width="0.1564%" height="15" fill="rgb(240,187,13)" fg:x="10919" fg:w="128"/><text x="13.5883%" y="255.50"></text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::end_map (19 samples, 0.02%)</title><rect x="13.4947%" y="245" width="0.0232%" height="15" fill="rgb(223,113,26)" fg:x="11047" fg:w="19"/><text x="13.7447%" y="255.50"></text></g><g><title>fusion_blossom`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1,319 samples, 1.61%)</title><rect x="11.9372%" y="261" width="1.6112%" height="15" fill="rgb(206,192,2)" fg:x="9772" fg:w="1319"/><text x="12.1872%" y="271.50"></text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::parse_integer (25 samples, 0.03%)</title><rect x="13.5179%" y="245" width="0.0305%" height="15" fill="rgb(241,108,4)" fg:x="11066" fg:w="25"/><text x="13.7679%" y="255.50"></text></g><g><title>fusion_blossom`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.05%)</title><rect x="13.5484%" y="261" width="0.0452%" height="15" fill="rgb(247,173,49)" fg:x="11091" fg:w="37"/><text x="13.7984%" y="271.50"></text></g><g><title>fusion_blossom`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (45 samples, 0.05%)</title><rect x="13.5936%" y="261" width="0.0550%" height="15" fill="rgb(224,114,35)" fg:x="11128" fg:w="45"/><text x="13.8436%" y="271.50"></text></g><g><title>fusion_blossom`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,454 samples, 1.78%)</title><rect x="11.8785%" y="277" width="1.7762%" height="15" fill="rgb(245,159,27)" fg:x="9724" fg:w="1454"/><text x="12.1285%" y="287.50">f..</text></g><g><title>fusion_blossom`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2,268 samples, 2.77%)</title><rect x="10.8854%" y="293" width="2.7705%" height="15" fill="rgb(245,172,44)" fg:x="8911" fg:w="2268"/><text x="11.1354%" y="303.50">fu..</text></g><g><title>fusion_blossom`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2,276 samples, 2.78%)</title><rect x="10.8854%" y="309" width="2.7803%" height="15" fill="rgb(236,23,11)" fg:x="8911" fg:w="2276"/><text x="11.1354%" y="319.50">fu..</text></g><g><title>fusion_blossom`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (135 samples, 0.16%)</title><rect x="14.4927%" y="245" width="0.1649%" height="15" fill="rgb(205,117,38)" fg:x="11864" fg:w="135"/><text x="14.7427%" y="255.50"></text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::parse_integer (88 samples, 0.11%)</title><rect x="14.5501%" y="229" width="0.1075%" height="15" fill="rgb(237,72,25)" fg:x="11911" fg:w="88"/><text x="14.8001%" y="239.50"></text></g><g><title>fusion_blossom`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (826 samples, 1.01%)</title><rect x="14.9129%" y="229" width="1.0090%" height="15" fill="rgb(244,70,9)" fg:x="12208" fg:w="826"/><text x="15.1629%" y="239.50"></text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::parse_integer (712 samples, 0.87%)</title><rect x="15.0522%" y="213" width="0.8698%" height="15" fill="rgb(217,125,39)" fg:x="12322" fg:w="712"/><text x="15.3022%" y="223.50"></text></g><g><title>fusion_blossom`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,064 samples, 1.30%)</title><rect x="14.6576%" y="245" width="1.2997%" height="15" fill="rgb(235,36,10)" fg:x="11999" fg:w="1064"/><text x="14.9076%" y="255.50"></text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::parse_integer (29 samples, 0.04%)</title><rect x="15.9219%" y="229" width="0.0354%" height="15" fill="rgb(251,123,47)" fg:x="13034" fg:w="29"/><text x="16.1719%" y="239.50"></text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::end_seq (38 samples, 0.05%)</title><rect x="15.9573%" y="245" width="0.0464%" height="15" fill="rgb(221,13,13)" fg:x="13063" fg:w="38"/><text x="16.2073%" y="255.50"></text></g><g><title>fusion_blossom`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,947 samples, 2.38%)</title><rect x="13.8917%" y="261" width="2.3784%" height="15" fill="rgb(238,131,9)" fg:x="11372" fg:w="1947"/><text x="14.1417%" y="271.50">fu..</text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::parse_integer (218 samples, 0.27%)</title><rect x="16.0038%" y="245" width="0.2663%" height="15" fill="rgb(211,50,8)" fg:x="13101" fg:w="218"/><text x="16.2538%" y="255.50"></text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::end_seq (21 samples, 0.03%)</title><rect x="16.2713%" y="261" width="0.0257%" height="15" fill="rgb(245,182,24)" fg:x="13320" fg:w="21"/><text x="16.5213%" y="271.50"></text></g><g><title>fusion_blossom`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2,180 samples, 2.66%)</title><rect x="13.6657%" y="277" width="2.6630%" height="15" fill="rgb(242,14,37)" fg:x="11187" fg:w="2180"/><text x="13.9157%" y="287.50">fu..</text></g><g><title>fusion_blossom`serde_json::de::Deserializer&lt;R&gt;::parse_integer (26 samples, 0.03%)</title><rect x="16.2969%" y="261" width="0.0318%" height="15" fill="rgb(246,228,12)" fg:x="13341" fg:w="26"/><text x="16.5469%" y="271.50"></text></g><g><title>fusion_blossom`serde_json::de::from_str (4,511 samples, 5.51%)</title><rect x="10.8854%" y="325" width="5.5105%" height="15" fill="rgb(213,55,15)" fg:x="8911" fg:w="4511"/><text x="11.1354%" y="335.50">fusion_..</text></g><g><title>fusion_blossom`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2,235 samples, 2.73%)</title><rect x="13.6657%" y="309" width="2.7302%" height="15" fill="rgb(209,9,3)" fg:x="11187" fg:w="2235"/><text x="13.9157%" y="319.50">fu..</text></g><g><title>fusion_blossom`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2,235 samples, 2.73%)</title><rect x="13.6657%" y="293" width="2.7302%" height="15" fill="rgb(230,59,30)" fg:x="11187" fg:w="2235"/><text x="13.9157%" y="303.50">fu..</text></g><g><title>fusion_blossom`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (55 samples, 0.07%)</title><rect x="16.3287%" y="277" width="0.0672%" height="15" fill="rgb(209,121,21)" fg:x="13367" fg:w="55"/><text x="16.5787%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_large (49 samples, 0.06%)</title><rect x="16.3971%" y="325" width="0.0599%" height="15" fill="rgb(220,109,13)" fg:x="13423" fg:w="49"/><text x="16.6471%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (49 samples, 0.06%)</title><rect x="16.3971%" y="309" width="0.0599%" height="15" fill="rgb(232,18,1)" fg:x="13423" fg:w="49"/><text x="16.6471%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (49 samples, 0.06%)</title><rect x="16.3971%" y="293" width="0.0599%" height="15" fill="rgb(215,41,42)" fg:x="13423" fg:w="49"/><text x="16.6471%" y="303.50"></text></g><g><title>fusion_blossom`fusion_blossom::example::ErrorPatternReader::new (7,559 samples, 9.23%)</title><rect x="7.2244%" y="341" width="9.2338%" height="15" fill="rgb(224,123,36)" fg:x="5914" fg:w="7559"/><text x="7.4744%" y="351.50">fusion_blosso..</text></g><g><title>fusion_blossom`fusion_blossom::example::ExampleCode::get_initializer (285 samples, 0.35%)</title><rect x="16.4582%" y="341" width="0.3481%" height="15" fill="rgb(240,125,3)" fg:x="13473" fg:w="285"/><text x="16.7082%" y="351.50"></text></g><g><title>fusion_blossom`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="17.3902%" y="309" width="0.0110%" height="15" fill="rgb(205,98,50)" fg:x="14236" fg:w="9"/><text x="17.6402%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.04%)</title><rect x="17.5246%" y="277" width="0.0391%" height="15" fill="rgb(205,185,37)" fg:x="14346" fg:w="32"/><text x="17.7746%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.01%)</title><rect x="17.5527%" y="261" width="0.0110%" height="15" fill="rgb(238,207,15)" fg:x="14369" fg:w="9"/><text x="17.8027%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (29 samples, 0.04%)</title><rect x="17.6077%" y="245" width="0.0354%" height="15" fill="rgb(213,199,42)" fg:x="14414" fg:w="29"/><text x="17.8577%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (64 samples, 0.08%)</title><rect x="17.5661%" y="277" width="0.0782%" height="15" fill="rgb(235,201,11)" fg:x="14380" fg:w="64"/><text x="17.8161%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (30 samples, 0.04%)</title><rect x="17.6077%" y="261" width="0.0366%" height="15" fill="rgb(207,46,11)" fg:x="14414" fg:w="30"/><text x="17.8577%" y="271.50"></text></g><g><title>fusion_blossom`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (180 samples, 0.22%)</title><rect x="17.4257%" y="293" width="0.2199%" height="15" fill="rgb(241,35,35)" fg:x="14265" fg:w="180"/><text x="17.6757%" y="303.50"></text></g><g><title>fusion_blossom`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (210 samples, 0.26%)</title><rect x="17.4012%" y="309" width="0.2565%" height="15" fill="rgb(243,32,47)" fg:x="14245" fg:w="210"/><text x="17.6512%" y="319.50"></text></g><g><title>fusion_blossom`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="17.6724%" y="277" width="0.0183%" height="15" fill="rgb(247,202,23)" fg:x="14467" fg:w="15"/><text x="17.9224%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (71 samples, 0.09%)</title><rect x="19.4571%" y="197" width="0.0867%" height="15" fill="rgb(219,102,11)" fg:x="15928" fg:w="71"/><text x="19.7071%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (12 samples, 0.01%)</title><rect x="19.5292%" y="181" width="0.0147%" height="15" fill="rgb(243,110,44)" fg:x="15987" fg:w="12"/><text x="19.7792%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (90 samples, 0.11%)</title><rect x="19.4400%" y="229" width="0.1099%" height="15" fill="rgb(222,74,54)" fg:x="15914" fg:w="90"/><text x="19.6900%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (79 samples, 0.10%)</title><rect x="19.4535%" y="213" width="0.0965%" height="15" fill="rgb(216,99,12)" fg:x="15925" fg:w="79"/><text x="19.7035%" y="223.50"></text></g><g><title>fusion_blossom`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (125 samples, 0.15%)</title><rect x="19.4034%" y="245" width="0.1527%" height="15" fill="rgb(226,22,26)" fg:x="15884" fg:w="125"/><text x="19.6534%" y="255.50"></text></g><g><title>fusion_blossom`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (176 samples, 0.21%)</title><rect x="19.3619%" y="261" width="0.2150%" height="15" fill="rgb(217,163,10)" fg:x="15850" fg:w="176"/><text x="19.6119%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.01%)</title><rect x="19.5646%" y="245" width="0.0122%" height="15" fill="rgb(213,25,53)" fg:x="16016" fg:w="10"/><text x="19.8146%" y="255.50"></text></g><g><title>fusion_blossom`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,570 samples, 1.92%)</title><rect x="17.6907%" y="277" width="1.9179%" height="15" fill="rgb(252,105,26)" fg:x="14482" fg:w="1570"/><text x="17.9407%" y="287.50">f..</text></g><g><title>fusion_blossom`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (26 samples, 0.03%)</title><rect x="19.5768%" y="261" width="0.0318%" height="15" fill="rgb(220,39,43)" fg:x="16026" fg:w="26"/><text x="19.8268%" y="271.50"></text></g><g><title>fusion_blossom`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,620 samples, 1.98%)</title><rect x="17.6578%" y="293" width="1.9789%" height="15" fill="rgb(229,68,48)" fg:x="14455" fg:w="1620"/><text x="17.9078%" y="303.50">f..</text></g><g><title>fusion_blossom`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (23 samples, 0.03%)</title><rect x="19.6086%" y="277" width="0.0281%" height="15" fill="rgb(252,8,32)" fg:x="16052" fg:w="23"/><text x="19.8586%" y="287.50"></text></g><g><title>fusion_blossom`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,621 samples, 1.98%)</title><rect x="17.6578%" y="309" width="1.9802%" height="15" fill="rgb(223,20,43)" fg:x="14455" fg:w="1621"/><text x="17.9078%" y="319.50">f..</text></g><g><title>fusion_blossom`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (94 samples, 0.11%)</title><rect x="19.6379%" y="309" width="0.1148%" height="15" fill="rgb(229,81,49)" fg:x="16076" fg:w="94"/><text x="19.8879%" y="319.50"></text></g><g><title>fusion_blossom`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (14 samples, 0.02%)</title><rect x="19.7528%" y="309" width="0.0171%" height="15" fill="rgb(236,28,36)" fg:x="16170" fg:w="14"/><text x="20.0028%" y="319.50"></text></g><g><title>fusion_blossom`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (739 samples, 0.90%)</title><rect x="19.9873%" y="277" width="0.9027%" height="15" fill="rgb(249,185,26)" fg:x="16362" fg:w="739"/><text x="20.2373%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (175 samples, 0.21%)</title><rect x="20.8900%" y="277" width="0.2138%" height="15" fill="rgb(249,174,33)" fg:x="17101" fg:w="175"/><text x="21.1400%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (78 samples, 0.10%)</title><rect x="21.0085%" y="261" width="0.0953%" height="15" fill="rgb(233,201,37)" fg:x="17198" fg:w="78"/><text x="21.2585%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (607 samples, 0.74%)</title><rect x="21.1099%" y="277" width="0.7415%" height="15" fill="rgb(221,78,26)" fg:x="17281" fg:w="607"/><text x="21.3599%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (282 samples, 0.34%)</title><rect x="21.5069%" y="261" width="0.3445%" height="15" fill="rgb(250,127,30)" fg:x="17606" fg:w="282"/><text x="21.7569%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (282 samples, 0.34%)</title><rect x="21.5069%" y="245" width="0.3445%" height="15" fill="rgb(230,49,44)" fg:x="17606" fg:w="282"/><text x="21.7569%" y="255.50"></text></g><g><title>fusion_blossom`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,710 samples, 2.09%)</title><rect x="19.7809%" y="293" width="2.0889%" height="15" fill="rgb(229,67,23)" fg:x="16193" fg:w="1710"/><text x="20.0309%" y="303.50">f..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (15 samples, 0.02%)</title><rect x="21.8514%" y="277" width="0.0183%" height="15" fill="rgb(249,83,47)" fg:x="17888" fg:w="15"/><text x="22.1014%" y="287.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$free (15 samples, 0.02%)</title><rect x="21.8697%" y="293" width="0.0183%" height="15" fill="rgb(215,43,3)" fg:x="17903" fg:w="15"/><text x="22.1197%" y="303.50"></text></g><g><title>fusion_blossom`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (97 samples, 0.12%)</title><rect x="21.8881%" y="293" width="0.1185%" height="15" fill="rgb(238,154,13)" fg:x="17918" fg:w="97"/><text x="22.1381%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (22 samples, 0.03%)</title><rect x="22.0065%" y="293" width="0.0269%" height="15" fill="rgb(219,56,2)" fg:x="18015" fg:w="22"/><text x="22.2565%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.02%)</title><rect x="22.0334%" y="293" width="0.0171%" height="15" fill="rgb(233,0,4)" fg:x="18037" fg:w="14"/><text x="22.2834%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_large (11 samples, 0.01%)</title><rect x="22.0505%" y="293" width="0.0134%" height="15" fill="rgb(235,30,7)" fg:x="18051" fg:w="11"/><text x="22.3005%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (11 samples, 0.01%)</title><rect x="22.0505%" y="277" width="0.0134%" height="15" fill="rgb(250,79,13)" fg:x="18051" fg:w="11"/><text x="22.3005%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (11 samples, 0.01%)</title><rect x="22.0505%" y="261" width="0.0134%" height="15" fill="rgb(211,146,34)" fg:x="18051" fg:w="11"/><text x="22.3005%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (16 samples, 0.02%)</title><rect x="22.0640%" y="293" width="0.0195%" height="15" fill="rgb(228,22,38)" fg:x="18062" fg:w="16"/><text x="22.3140%" y="303.50"></text></g><g><title>fusion_blossom`core::ptr::drop_in_place&lt;fusion_blossom::complete_graph::CompleteGraph&gt; (1,900 samples, 2.32%)</title><rect x="19.7723%" y="309" width="2.3210%" height="15" fill="rgb(235,168,5)" fg:x="16186" fg:w="1900"/><text x="20.0223%" y="319.50">f..</text></g><g><title>fusion_blossom`core::ptr::drop_in_place&lt;fusion_blossom::util::PartitionedSolverInitializer&gt; (19 samples, 0.02%)</title><rect x="22.0933%" y="309" width="0.0232%" height="15" fill="rgb(221,155,16)" fg:x="18086" fg:w="19"/><text x="22.3433%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_large (19 samples, 0.02%)</title><rect x="22.0933%" y="293" width="0.0232%" height="15" fill="rgb(215,215,53)" fg:x="18086" fg:w="19"/><text x="22.3433%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (19 samples, 0.02%)</title><rect x="22.0933%" y="277" width="0.0232%" height="15" fill="rgb(223,4,10)" fg:x="18086" fg:w="19"/><text x="22.3433%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (19 samples, 0.02%)</title><rect x="22.0933%" y="261" width="0.0232%" height="15" fill="rgb(234,103,6)" fg:x="18086" fg:w="19"/><text x="22.3433%" y="271.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$malloc (10 samples, 0.01%)</title><rect x="22.6870%" y="293" width="0.0122%" height="15" fill="rgb(227,97,0)" fg:x="18572" fg:w="10"/><text x="22.9370%" y="303.50"></text></g><g><title>fusion_blossom`__rdl_alloc (15 samples, 0.02%)</title><rect x="22.6992%" y="293" width="0.0183%" height="15" fill="rgb(234,150,53)" fg:x="18582" fg:w="15"/><text x="22.9492%" y="303.50"></text></g><g><title>fusion_blossom`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (95 samples, 0.12%)</title><rect x="22.8226%" y="277" width="0.1160%" height="15" fill="rgb(228,201,54)" fg:x="18683" fg:w="95"/><text x="23.0726%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (29 samples, 0.04%)</title><rect x="22.9972%" y="261" width="0.0354%" height="15" fill="rgb(222,22,37)" fg:x="18826" fg:w="29"/><text x="23.2472%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (31 samples, 0.04%)</title><rect x="23.6483%" y="229" width="0.0379%" height="15" fill="rgb(237,53,32)" fg:x="19359" fg:w="31"/><text x="23.8983%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2,467 samples, 3.01%)</title><rect x="23.0547%" y="245" width="3.0136%" height="15" fill="rgb(233,25,53)" fg:x="18873" fg:w="2467"/><text x="23.3047%" y="255.50">lib..</text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1,950 samples, 2.38%)</title><rect x="23.6862%" y="229" width="2.3821%" height="15" fill="rgb(210,40,34)" fg:x="19390" fg:w="1950"/><text x="23.9362%" y="239.50">li..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,583 samples, 3.16%)</title><rect x="22.9386%" y="277" width="3.1553%" height="15" fill="rgb(241,220,44)" fg:x="18778" fg:w="2583"/><text x="23.1886%" y="287.50">lib..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2,506 samples, 3.06%)</title><rect x="23.0327%" y="261" width="3.0612%" height="15" fill="rgb(235,28,35)" fg:x="18855" fg:w="2506"/><text x="23.2827%" y="271.50">lib..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (21 samples, 0.03%)</title><rect x="26.0683%" y="245" width="0.0257%" height="15" fill="rgb(210,56,17)" fg:x="21340" fg:w="21"/><text x="26.3183%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (15 samples, 0.02%)</title><rect x="26.0939%" y="277" width="0.0183%" height="15" fill="rgb(224,130,29)" fg:x="21361" fg:w="15"/><text x="26.3439%" y="287.50"></text></g><g><title>fusion_blossom`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2,794 samples, 3.41%)</title><rect x="22.7175%" y="293" width="3.4131%" height="15" fill="rgb(235,212,8)" fg:x="18597" fg:w="2794"/><text x="22.9675%" y="303.50">fus..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.02%)</title><rect x="26.1122%" y="277" width="0.0183%" height="15" fill="rgb(223,33,50)" fg:x="21376" fg:w="15"/><text x="26.3622%" y="287.50"></text></g><g><title>fusion_blossom`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (162 samples, 0.20%)</title><rect x="26.1306%" y="293" width="0.1979%" height="15" fill="rgb(219,149,13)" fg:x="21391" fg:w="162"/><text x="26.3806%" y="303.50"></text></g><g><title>fusion_blossom`fusion_blossom::complete_graph::CompleteGraph::new (3,450 samples, 4.21%)</title><rect x="22.1165%" y="309" width="4.2144%" height="15" fill="rgb(250,156,29)" fg:x="18105" fg:w="3450"/><text x="22.3665%" y="319.50">fusio..</text></g><g><title>libsystem_malloc.dylib`free_large (28 samples, 0.03%)</title><rect x="26.3309%" y="309" width="0.0342%" height="15" fill="rgb(216,193,19)" fg:x="21555" fg:w="28"/><text x="26.5809%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (28 samples, 0.03%)</title><rect x="26.3309%" y="293" width="0.0342%" height="15" fill="rgb(216,135,14)" fg:x="21555" fg:w="28"/><text x="26.5809%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (28 samples, 0.03%)</title><rect x="26.3309%" y="277" width="0.0342%" height="15" fill="rgb(241,47,5)" fg:x="21555" fg:w="28"/><text x="26.5809%" y="287.50"></text></g><g><title>libsystem_platform.dylib`__bzero (60 samples, 0.07%)</title><rect x="26.3651%" y="309" width="0.0733%" height="15" fill="rgb(233,42,35)" fg:x="21583" fg:w="60"/><text x="26.6151%" y="319.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_parallel::DualModuleParallel&lt;SerialModule&gt;::new_config (8,095 samples, 9.89%)</title><rect x="16.8063%" y="325" width="9.8886%" height="15" fill="rgb(231,13,6)" fg:x="13758" fg:w="8095"/><text x="17.0563%" y="335.50">fusion_blossom..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (210 samples, 0.26%)</title><rect x="26.4384%" y="309" width="0.2565%" height="15" fill="rgb(207,181,40)" fg:x="21643" fg:w="210"/><text x="26.6884%" y="319.50"></text></g><g><title>fusion_blossom`fusion_blossom::mwpm_solver::SolverParallel::new (8,099 samples, 9.89%)</title><rect x="16.8063%" y="341" width="9.8935%" height="15" fill="rgb(254,173,49)" fg:x="13758" fg:w="8099"/><text x="17.0563%" y="351.50">fusion_blossom..</text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (21 samples, 0.03%)</title><rect x="26.7096%" y="341" width="0.0257%" height="15" fill="rgb(221,1,38)" fg:x="21865" fg:w="21"/><text x="26.9596%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (27 samples, 0.03%)</title><rect x="26.7352%" y="341" width="0.0330%" height="15" fill="rgb(206,124,46)" fg:x="21886" fg:w="27"/><text x="26.9852%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_large (28 samples, 0.03%)</title><rect x="26.7682%" y="341" width="0.0342%" height="15" fill="rgb(249,21,11)" fg:x="21913" fg:w="28"/><text x="27.0182%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (28 samples, 0.03%)</title><rect x="26.7682%" y="325" width="0.0342%" height="15" fill="rgb(222,201,40)" fg:x="21913" fg:w="28"/><text x="27.0182%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (28 samples, 0.03%)</title><rect x="26.7682%" y="309" width="0.0342%" height="15" fill="rgb(235,61,29)" fg:x="21913" fg:w="28"/><text x="27.0182%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (33 samples, 0.04%)</title><rect x="26.8085%" y="341" width="0.0403%" height="15" fill="rgb(219,207,3)" fg:x="21946" fg:w="33"/><text x="27.0585%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (16 samples, 0.02%)</title><rect x="26.8488%" y="341" width="0.0195%" height="15" fill="rgb(222,56,46)" fg:x="21979" fg:w="16"/><text x="27.0988%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (43 samples, 0.05%)</title><rect x="26.8684%" y="341" width="0.0525%" height="15" fill="rgb(239,76,54)" fg:x="21995" fg:w="43"/><text x="27.1184%" y="351.50"></text></g><g><title>fusion_blossom`main (22,053 samples, 26.94%)</title><rect x="0.0000%" y="437" width="26.9392%" height="15" fill="rgb(231,124,27)" fg:x="0" fg:w="22053"/><text x="0.2500%" y="447.50">fusion_blossom`main</text></g><g><title>fusion_blossom`std::rt::lang_start_internal (22,053 samples, 26.94%)</title><rect x="0.0000%" y="421" width="26.9392%" height="15" fill="rgb(249,195,6)" fg:x="0" fg:w="22053"/><text x="0.2500%" y="431.50">fusion_blossom`std::rt::lang_start_internal</text></g><g><title>fusion_blossom`std::rt::lang_start::_{{closure}} (22,053 samples, 26.94%)</title><rect x="0.0000%" y="405" width="26.9392%" height="15" fill="rgb(237,174,47)" fg:x="0" fg:w="22053"/><text x="0.2500%" y="415.50">fusion_blossom`std::rt::lang_start::_{{clos..</text></g><g><title>fusion_blossom`std::sys_common::backtrace::__rust_begin_short_backtrace (22,053 samples, 26.94%)</title><rect x="0.0000%" y="389" width="26.9392%" height="15" fill="rgb(206,201,31)" fg:x="0" fg:w="22053"/><text x="0.2500%" y="399.50">fusion_blossom`std::sys_common::backtrace::..</text></g><g><title>fusion_blossom`fusion_blossom::main (22,053 samples, 26.94%)</title><rect x="0.0000%" y="373" width="26.9392%" height="15" fill="rgb(231,57,52)" fg:x="0" fg:w="22053"/><text x="0.2500%" y="383.50">fusion_blossom`fusion_blossom::main</text></g><g><title>fusion_blossom`fusion_blossom::Cli::run (22,053 samples, 26.94%)</title><rect x="0.0000%" y="357" width="26.9392%" height="15" fill="rgb(248,177,22)" fg:x="0" fg:w="22053"/><text x="0.2500%" y="367.50">fusion_blossom`fusion_blossom::Cli::run</text></g><g><title>libsystem_platform.dylib`_platform_memset (15 samples, 0.02%)</title><rect x="26.9209%" y="341" width="0.0183%" height="15" fill="rgb(215,211,37)" fg:x="22038" fg:w="15"/><text x="27.1709%" y="351.50"></text></g><g><title>dyld`start (22,054 samples, 26.94%)</title><rect x="0.0000%" y="453" width="26.9405%" height="15" fill="rgb(241,128,51)" fg:x="0" fg:w="22054"/><text x="0.2500%" y="463.50">dyld`start</text></g><g><title>libsystem_kernel.dylib`__exit (234 samples, 0.29%)</title><rect x="26.9405%" y="453" width="0.2858%" height="15" fill="rgb(227,165,31)" fg:x="22054" fg:w="234"/><text x="27.1905%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.03%)</title><rect x="29.3103%" y="149" width="0.0269%" height="15" fill="rgb(228,167,24)" fg:x="23994" fg:w="22"/><text x="29.5603%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (22 samples, 0.03%)</title><rect x="29.6975%" y="117" width="0.0269%" height="15" fill="rgb(228,143,12)" fg:x="24311" fg:w="22"/><text x="29.9475%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (381 samples, 0.47%)</title><rect x="29.3787%" y="133" width="0.4654%" height="15" fill="rgb(249,149,8)" fg:x="24050" fg:w="381"/><text x="29.6287%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (98 samples, 0.12%)</title><rect x="29.7244%" y="117" width="0.1197%" height="15" fill="rgb(243,35,44)" fg:x="24333" fg:w="98"/><text x="29.9744%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (505 samples, 0.62%)</title><rect x="29.2382%" y="165" width="0.6169%" height="15" fill="rgb(246,89,9)" fg:x="23935" fg:w="505"/><text x="29.4882%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (424 samples, 0.52%)</title><rect x="29.3372%" y="149" width="0.5179%" height="15" fill="rgb(233,213,13)" fg:x="24016" fg:w="424"/><text x="29.5872%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.01%)</title><rect x="29.8441%" y="133" width="0.0110%" height="15" fill="rgb(233,141,41)" fg:x="24431" fg:w="9"/><text x="30.0941%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (15 samples, 0.02%)</title><rect x="29.8551%" y="165" width="0.0183%" height="15" fill="rgb(239,167,4)" fg:x="24440" fg:w="15"/><text x="30.1051%" y="175.50"></text></g><g><title>fusion_blossom`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (593 samples, 0.72%)</title><rect x="29.1552%" y="181" width="0.7244%" height="15" fill="rgb(209,217,16)" fg:x="23867" fg:w="593"/><text x="29.4052%" y="191.50"></text></g><g><title>fusion_blossom`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (607 samples, 0.74%)</title><rect x="29.1552%" y="197" width="0.7415%" height="15" fill="rgb(219,88,35)" fg:x="23867" fg:w="607"/><text x="29.4052%" y="207.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$malloc (9 samples, 0.01%)</title><rect x="30.0127%" y="181" width="0.0110%" height="15" fill="rgb(220,193,23)" fg:x="24569" fg:w="9"/><text x="30.2627%" y="191.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$realloc (9 samples, 0.01%)</title><rect x="30.0237%" y="181" width="0.0110%" height="15" fill="rgb(230,90,52)" fg:x="24578" fg:w="9"/><text x="30.2737%" y="191.50"></text></g><g><title>fusion_blossom`__rdl_alloc (12 samples, 0.01%)</title><rect x="30.0347%" y="181" width="0.0147%" height="15" fill="rgb(252,106,19)" fg:x="24587" fg:w="12"/><text x="30.2847%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.01%)</title><rect x="30.1544%" y="149" width="0.0122%" height="15" fill="rgb(206,74,20)" fg:x="24685" fg:w="10"/><text x="30.4044%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (42 samples, 0.05%)</title><rect x="30.2973%" y="117" width="0.0513%" height="15" fill="rgb(230,138,44)" fg:x="24802" fg:w="42"/><text x="30.5473%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (200 samples, 0.24%)</title><rect x="30.1984%" y="133" width="0.2443%" height="15" fill="rgb(235,182,43)" fg:x="24721" fg:w="200"/><text x="30.4484%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (77 samples, 0.09%)</title><rect x="30.3486%" y="117" width="0.0941%" height="15" fill="rgb(242,16,51)" fg:x="24844" fg:w="77"/><text x="30.5986%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (313 samples, 0.38%)</title><rect x="30.0836%" y="165" width="0.3824%" height="15" fill="rgb(248,9,4)" fg:x="24627" fg:w="313"/><text x="30.3336%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (245 samples, 0.30%)</title><rect x="30.1666%" y="149" width="0.2993%" height="15" fill="rgb(210,31,22)" fg:x="24695" fg:w="245"/><text x="30.4166%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (19 samples, 0.02%)</title><rect x="30.4427%" y="133" width="0.0232%" height="15" fill="rgb(239,54,39)" fg:x="24921" fg:w="19"/><text x="30.6927%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (19 samples, 0.02%)</title><rect x="30.4659%" y="165" width="0.0232%" height="15" fill="rgb(230,99,41)" fg:x="24940" fg:w="19"/><text x="30.7159%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (13 samples, 0.02%)</title><rect x="30.5026%" y="165" width="0.0159%" height="15" fill="rgb(253,106,12)" fg:x="24970" fg:w="13"/><text x="30.7526%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (13 samples, 0.02%)</title><rect x="30.6039%" y="149" width="0.0159%" height="15" fill="rgb(213,46,41)" fg:x="25053" fg:w="13"/><text x="30.8539%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (9 samples, 0.01%)</title><rect x="30.6748%" y="133" width="0.0110%" height="15" fill="rgb(215,133,35)" fg:x="25111" fg:w="9"/><text x="30.9248%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (11 samples, 0.01%)</title><rect x="30.6858%" y="133" width="0.0134%" height="15" fill="rgb(213,28,5)" fg:x="25120" fg:w="11"/><text x="30.9358%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.01%)</title><rect x="30.6992%" y="133" width="0.0122%" height="15" fill="rgb(215,77,49)" fg:x="25131" fg:w="10"/><text x="30.9492%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.01%)</title><rect x="30.7114%" y="133" width="0.0147%" height="15" fill="rgb(248,100,22)" fg:x="25141" fg:w="12"/><text x="30.9614%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (53 samples, 0.06%)</title><rect x="30.7261%" y="133" width="0.0647%" height="15" fill="rgb(208,67,9)" fg:x="25153" fg:w="53"/><text x="30.9761%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.01%)</title><rect x="30.8373%" y="117" width="0.0122%" height="15" fill="rgb(219,133,21)" fg:x="25244" fg:w="10"/><text x="31.0873%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (16 samples, 0.02%)</title><rect x="30.8495%" y="117" width="0.0195%" height="15" fill="rgb(246,46,29)" fg:x="25254" fg:w="16"/><text x="31.0995%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (73 samples, 0.09%)</title><rect x="30.8690%" y="117" width="0.0892%" height="15" fill="rgb(246,185,52)" fg:x="25270" fg:w="73"/><text x="31.1190%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (22 samples, 0.03%)</title><rect x="31.2001%" y="85" width="0.0269%" height="15" fill="rgb(252,136,11)" fg:x="25541" fg:w="22"/><text x="31.4501%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (321 samples, 0.39%)</title><rect x="30.9851%" y="101" width="0.3921%" height="15" fill="rgb(219,138,53)" fg:x="25365" fg:w="321"/><text x="31.2351%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (123 samples, 0.15%)</title><rect x="31.2269%" y="85" width="0.1503%" height="15" fill="rgb(211,51,23)" fg:x="25563" fg:w="123"/><text x="31.4769%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (357 samples, 0.44%)</title><rect x="30.9582%" y="117" width="0.4361%" height="15" fill="rgb(247,221,28)" fg:x="25343" fg:w="357"/><text x="31.2082%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (14 samples, 0.02%)</title><rect x="31.3772%" y="101" width="0.0171%" height="15" fill="rgb(251,222,45)" fg:x="25686" fg:w="14"/><text x="31.6272%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (572 samples, 0.70%)</title><rect x="30.7908%" y="133" width="0.6987%" height="15" fill="rgb(217,162,53)" fg:x="25206" fg:w="572"/><text x="31.0408%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (78 samples, 0.10%)</title><rect x="31.3943%" y="117" width="0.0953%" height="15" fill="rgb(229,93,14)" fg:x="25700" fg:w="78"/><text x="31.6443%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (737 samples, 0.90%)</title><rect x="30.6198%" y="149" width="0.9003%" height="15" fill="rgb(209,67,49)" fg:x="25066" fg:w="737"/><text x="30.8698%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (25 samples, 0.03%)</title><rect x="31.4896%" y="133" width="0.0305%" height="15" fill="rgb(213,87,29)" fg:x="25778" fg:w="25"/><text x="31.7396%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (73 samples, 0.09%)</title><rect x="31.5201%" y="149" width="0.0892%" height="15" fill="rgb(205,151,52)" fg:x="25803" fg:w="73"/><text x="31.7701%" y="159.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (1,279 samples, 1.56%)</title><rect x="30.0591%" y="181" width="1.5624%" height="15" fill="rgb(253,215,39)" fg:x="24607" fg:w="1279"/><text x="30.3091%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (903 samples, 1.10%)</title><rect x="30.5184%" y="165" width="1.1031%" height="15" fill="rgb(221,220,41)" fg:x="24983" fg:w="903"/><text x="30.7684%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (10 samples, 0.01%)</title><rect x="31.6093%" y="149" width="0.0122%" height="15" fill="rgb(218,133,21)" fg:x="25876" fg:w="10"/><text x="31.8593%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.01%)</title><rect x="31.6215%" y="181" width="0.0147%" height="15" fill="rgb(221,193,43)" fg:x="25886" fg:w="12"/><text x="31.8715%" y="191.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,441 samples, 1.76%)</title><rect x="29.8967%" y="197" width="1.7603%" height="15" fill="rgb(240,128,52)" fg:x="24474" fg:w="1441"/><text x="30.1467%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (17 samples, 0.02%)</title><rect x="31.6362%" y="181" width="0.0208%" height="15" fill="rgb(253,114,12)" fg:x="25898" fg:w="17"/><text x="31.8862%" y="191.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (24 samples, 0.03%)</title><rect x="31.6569%" y="197" width="0.0293%" height="15" fill="rgb(215,223,47)" fg:x="25915" fg:w="24"/><text x="31.9069%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 0.03%)</title><rect x="31.9037%" y="181" width="0.0293%" height="15" fill="rgb(248,225,23)" fg:x="26117" fg:w="24"/><text x="32.1537%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (70 samples, 0.09%)</title><rect x="33.1460%" y="149" width="0.0855%" height="15" fill="rgb(250,108,0)" fg:x="27134" fg:w="70"/><text x="33.3960%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1,314 samples, 1.61%)</title><rect x="32.0344%" y="165" width="1.6051%" height="15" fill="rgb(228,208,7)" fg:x="26224" fg:w="1314"/><text x="32.2844%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (334 samples, 0.41%)</title><rect x="33.2315%" y="149" width="0.4080%" height="15" fill="rgb(244,45,10)" fg:x="27204" fg:w="334"/><text x="33.4815%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,641 samples, 2.00%)</title><rect x="31.6863%" y="197" width="2.0046%" height="15" fill="rgb(207,125,25)" fg:x="25939" fg:w="1641"/><text x="31.9363%" y="207.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1,439 samples, 1.76%)</title><rect x="31.9330%" y="181" width="1.7578%" height="15" fill="rgb(210,195,18)" fg:x="26141" fg:w="1439"/><text x="32.1830%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (42 samples, 0.05%)</title><rect x="33.6395%" y="165" width="0.0513%" height="15" fill="rgb(249,80,12)" fg:x="27538" fg:w="42"/><text x="33.8895%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (49 samples, 0.06%)</title><rect x="33.6908%" y="197" width="0.0599%" height="15" fill="rgb(221,65,9)" fg:x="27580" fg:w="49"/><text x="33.9408%" y="207.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::new_partitioned (5,359 samples, 6.55%)</title><rect x="27.2312%" y="213" width="6.5464%" height="15" fill="rgb(235,49,36)" fg:x="22292" fg:w="5359"/><text x="27.4812%" y="223.50">fusion_bl..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.03%)</title><rect x="33.7507%" y="197" width="0.0269%" height="15" fill="rgb(225,32,20)" fg:x="27629" fg:w="22"/><text x="34.0007%" y="207.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$malloc (23 samples, 0.03%)</title><rect x="33.7776%" y="213" width="0.0281%" height="15" fill="rgb(215,141,46)" fg:x="27651" fg:w="23"/><text x="34.0276%" y="223.50"></text></g><g><title>fusion_blossom`__rdl_alloc (18 samples, 0.02%)</title><rect x="33.8057%" y="213" width="0.0220%" height="15" fill="rgb(250,160,47)" fg:x="27674" fg:w="18"/><text x="34.0557%" y="223.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.03%)</title><rect x="33.8277%" y="213" width="0.0342%" height="15" fill="rgb(216,222,40)" fg:x="27692" fg:w="28"/><text x="34.0777%" y="223.50"></text></g><g><title>fusion_blossom`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,432 samples, 6.64%)</title><rect x="27.2312%" y="293" width="6.6356%" height="15" fill="rgb(234,217,39)" fg:x="22292" fg:w="5432"/><text x="27.4812%" y="303.50">fusion_bl..</text></g><g><title>fusion_blossom`rayon::iter::collect::collect_into_vec (5,432 samples, 6.64%)</title><rect x="27.2312%" y="277" width="6.6356%" height="15" fill="rgb(207,178,40)" fg:x="22292" fg:w="5432"/><text x="27.4812%" y="287.50">fusion_bl..</text></g><g><title>fusion_blossom`rayon::iter::plumbing::bridge_producer_consumer::helper (5,432 samples, 6.64%)</title><rect x="27.2312%" y="261" width="6.6356%" height="15" fill="rgb(221,136,13)" fg:x="22292" fg:w="5432"/><text x="27.4812%" y="271.50">fusion_bl..</text></g><g><title>fusion_blossom`&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5,432 samples, 6.64%)</title><rect x="27.2312%" y="245" width="6.6356%" height="15" fill="rgb(249,199,10)" fg:x="22292" fg:w="5432"/><text x="27.4812%" y="255.50">fusion_bl..</text></g><g><title>fusion_blossom`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5,432 samples, 6.64%)</title><rect x="27.2312%" y="229" width="6.6356%" height="15" fill="rgb(249,222,13)" fg:x="22292" fg:w="5432"/><text x="27.4812%" y="239.50">fusion_bl..</text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (33 samples, 0.04%)</title><rect x="34.4898%" y="197" width="0.0403%" height="15" fill="rgb(244,185,38)" fg:x="28234" fg:w="33"/><text x="34.7398%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (340 samples, 0.42%)</title><rect x="34.1245%" y="213" width="0.4153%" height="15" fill="rgb(236,202,9)" fg:x="27935" fg:w="340"/><text x="34.3745%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.02%)</title><rect x="34.6192%" y="181" width="0.0195%" height="15" fill="rgb(250,229,37)" fg:x="28340" fg:w="16"/><text x="34.8692%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (46 samples, 0.06%)</title><rect x="34.6388%" y="181" width="0.0562%" height="15" fill="rgb(206,174,23)" fg:x="28356" fg:w="46"/><text x="34.8888%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (142 samples, 0.17%)</title><rect x="34.5423%" y="213" width="0.1735%" height="15" fill="rgb(211,33,43)" fg:x="28277" fg:w="142"/><text x="34.7923%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (128 samples, 0.16%)</title><rect x="34.5594%" y="197" width="0.1564%" height="15" fill="rgb(245,58,50)" fg:x="28291" fg:w="128"/><text x="34.8094%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (12 samples, 0.01%)</title><rect x="34.7011%" y="181" width="0.0147%" height="15" fill="rgb(244,68,36)" fg:x="28407" fg:w="12"/><text x="34.9511%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (12 samples, 0.01%)</title><rect x="34.7011%" y="165" width="0.0147%" height="15" fill="rgb(232,229,15)" fg:x="28407" fg:w="12"/><text x="34.9511%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (85 samples, 0.10%)</title><rect x="34.7157%" y="213" width="0.1038%" height="15" fill="rgb(254,30,23)" fg:x="28419" fg:w="85"/><text x="34.9657%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (224 samples, 0.27%)</title><rect x="34.8196%" y="213" width="0.2736%" height="15" fill="rgb(235,160,14)" fg:x="28504" fg:w="224"/><text x="35.0696%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (138 samples, 0.17%)</title><rect x="34.9246%" y="197" width="0.1686%" height="15" fill="rgb(212,155,44)" fg:x="28590" fg:w="138"/><text x="35.1746%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (138 samples, 0.17%)</title><rect x="34.9246%" y="181" width="0.1686%" height="15" fill="rgb(226,2,50)" fg:x="28590" fg:w="138"/><text x="35.1746%" y="191.50"></text></g><g><title>fusion_blossom`alloc::sync::Arc&lt;T&gt;::drop_slow (1,007 samples, 1.23%)</title><rect x="33.8802%" y="229" width="1.2301%" height="15" fill="rgb(234,177,6)" fg:x="27735" fg:w="1007"/><text x="34.1302%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (20 samples, 0.02%)</title><rect x="35.1103%" y="229" width="0.0244%" height="15" fill="rgb(217,24,9)" fg:x="28742" fg:w="20"/><text x="35.3603%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (223 samples, 0.27%)</title><rect x="35.1347%" y="229" width="0.2724%" height="15" fill="rgb(220,13,46)" fg:x="28762" fg:w="223"/><text x="35.3847%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (152 samples, 0.19%)</title><rect x="35.4157%" y="229" width="0.1857%" height="15" fill="rgb(239,221,27)" fg:x="28992" fg:w="152"/><text x="35.6657%" y="239.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::clear (1,451 samples, 1.77%)</title><rect x="33.8668%" y="245" width="1.7725%" height="15" fill="rgb(222,198,25)" fg:x="27724" fg:w="1451"/><text x="34.1168%" y="255.50">f..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (31 samples, 0.04%)</title><rect x="35.6014%" y="229" width="0.0379%" height="15" fill="rgb(211,99,13)" fg:x="29144" fg:w="31"/><text x="35.8514%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.05%)</title><rect x="35.8029%" y="213" width="0.0452%" height="15" fill="rgb(232,111,31)" fg:x="29309" fg:w="37"/><text x="36.0529%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.01%)</title><rect x="35.8335%" y="197" width="0.0147%" height="15" fill="rgb(245,82,37)" fg:x="29334" fg:w="12"/><text x="36.0835%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (97 samples, 0.12%)</title><rect x="35.8494%" y="213" width="0.1185%" height="15" fill="rgb(227,149,46)" fg:x="29347" fg:w="97"/><text x="36.0994%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (86 samples, 0.11%)</title><rect x="35.8628%" y="197" width="0.1051%" height="15" fill="rgb(218,36,50)" fg:x="29358" fg:w="86"/><text x="36.1128%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (86 samples, 0.11%)</title><rect x="35.8628%" y="181" width="0.1051%" height="15" fill="rgb(226,80,48)" fg:x="29358" fg:w="86"/><text x="36.1128%" y="191.50"></text></g><g><title>fusion_blossom`alloc::sync::Arc&lt;T&gt;::drop_slow (249 samples, 0.30%)</title><rect x="35.6673%" y="229" width="0.3042%" height="15" fill="rgb(238,224,15)" fg:x="29198" fg:w="249"/><text x="35.9173%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (45 samples, 0.05%)</title><rect x="35.9764%" y="229" width="0.0550%" height="15" fill="rgb(241,136,10)" fg:x="29451" fg:w="45"/><text x="36.2264%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.02%)</title><rect x="36.0130%" y="213" width="0.0183%" height="15" fill="rgb(208,32,45)" fg:x="29481" fg:w="15"/><text x="36.2630%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (11 samples, 0.01%)</title><rect x="36.0314%" y="229" width="0.0134%" height="15" fill="rgb(207,135,9)" fg:x="29496" fg:w="11"/><text x="36.2814%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (34 samples, 0.04%)</title><rect x="36.0448%" y="229" width="0.0415%" height="15" fill="rgb(206,86,44)" fg:x="29507" fg:w="34"/><text x="36.2948%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (12 samples, 0.01%)</title><rect x="36.0717%" y="213" width="0.0147%" height="15" fill="rgb(245,177,15)" fg:x="29529" fg:w="12"/><text x="36.3217%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (12 samples, 0.01%)</title><rect x="36.0717%" y="197" width="0.0147%" height="15" fill="rgb(206,64,50)" fg:x="29529" fg:w="12"/><text x="36.3217%" y="207.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::primal_module_serial::PrimalModuleSerial as fusion_blossom::primal_module::PrimalModuleImpl&gt;::clear (367 samples, 0.45%)</title><rect x="35.6392%" y="245" width="0.4483%" height="15" fill="rgb(234,36,40)" fg:x="29175" fg:w="367"/><text x="35.8892%" y="255.50"></text></g><g><title>fusion_blossom`alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.02%)</title><rect x="36.0924%" y="245" width="0.0159%" height="15" fill="rgb(213,64,8)" fg:x="29546" fg:w="13"/><text x="36.3424%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (10 samples, 0.01%)</title><rect x="36.1218%" y="245" width="0.0122%" height="15" fill="rgb(210,75,36)" fg:x="29570" fg:w="10"/><text x="36.3718%" y="255.50"></text></g><g><title>fusion_blossom`rayon_core::registry::in_worker (7,299 samples, 8.92%)</title><rect x="27.2312%" y="325" width="8.9162%" height="15" fill="rgb(229,88,21)" fg:x="22292" fg:w="7299"/><text x="27.4812%" y="335.50">fusion_blosso..</text></g><g><title>fusion_blossom`rayon_core::scope::ScopeBase::complete (7,299 samples, 8.92%)</title><rect x="27.2312%" y="309" width="8.9162%" height="15" fill="rgb(252,204,47)" fg:x="22292" fg:w="7299"/><text x="27.4812%" y="319.50">fusion_blosso..</text></g><g><title>fusion_blossom`rayon::iter::plumbing::bridge (1,867 samples, 2.28%)</title><rect x="33.8668%" y="293" width="2.2807%" height="15" fill="rgb(208,77,27)" fg:x="27724" fg:w="1867"/><text x="34.1168%" y="303.50">f..</text></g><g><title>fusion_blossom`rayon::iter::plumbing::bridge_producer_consumer::helper (1,867 samples, 2.28%)</title><rect x="33.8668%" y="277" width="2.2807%" height="15" fill="rgb(221,76,26)" fg:x="27724" fg:w="1867"/><text x="34.1168%" y="287.50">f..</text></g><g><title>fusion_blossom`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,867 samples, 2.28%)</title><rect x="33.8668%" y="261" width="2.2807%" height="15" fill="rgb(225,139,18)" fg:x="27724" fg:w="1867"/><text x="34.1168%" y="271.50">f..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.01%)</title><rect x="36.1340%" y="245" width="0.0134%" height="15" fill="rgb(230,137,11)" fg:x="29580" fg:w="11"/><text x="36.3840%" y="255.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::get_dual_node_index (150 samples, 0.18%)</title><rect x="42.8819%" y="165" width="0.1832%" height="15" fill="rgb(212,28,1)" fg:x="35104" fg:w="150"/><text x="43.1319%" y="175.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::compute_maximum_update_length_dual_node (5,439 samples, 6.64%)</title><rect x="36.7411%" y="181" width="6.6441%" height="15" fill="rgb(248,164,17)" fg:x="30077" fg:w="5439"/><text x="36.9911%" y="191.50">fusion_bl..</text></g><g><title>fusion_blossom`fusion_blossom::util::WeakRwLock&lt;T&gt;::upgrade_force (259 samples, 0.32%)</title><rect x="43.0688%" y="165" width="0.3164%" height="15" fill="rgb(222,171,42)" fg:x="35257" fg:w="259"/><text x="43.3188%" y="175.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$free (15 samples, 0.02%)</title><rect x="46.6346%" y="165" width="0.0183%" height="15" fill="rgb(243,84,45)" fg:x="38176" fg:w="15"/><text x="46.8846%" y="175.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (34 samples, 0.04%)</title><rect x="46.6529%" y="165" width="0.0415%" height="15" fill="rgb(252,49,23)" fg:x="38191" fg:w="34"/><text x="46.9029%" y="175.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::get_dual_node_index (29 samples, 0.04%)</title><rect x="46.6944%" y="165" width="0.0354%" height="15" fill="rgb(215,19,7)" fg:x="38225" fg:w="29"/><text x="46.9444%" y="175.50"></text></g><g><title>fusion_blossom`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="54.2792%" y="149" width="0.0330%" height="15" fill="rgb(238,81,41)" fg:x="44434" fg:w="27"/><text x="54.5292%" y="159.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$realloc (13 samples, 0.02%)</title><rect x="54.5577%" y="133" width="0.0159%" height="15" fill="rgb(210,199,37)" fg:x="44662" fg:w="13"/><text x="54.8077%" y="143.50"></text></g><g><title>fusion_blossom`__rdl_alloc (34 samples, 0.04%)</title><rect x="54.5736%" y="133" width="0.0415%" height="15" fill="rgb(244,192,49)" fg:x="44675" fg:w="34"/><text x="54.8236%" y="143.50"></text></g><g><title>fusion_blossom`__rdl_realloc (10 samples, 0.01%)</title><rect x="54.7079%" y="117" width="0.0122%" height="15" fill="rgb(226,211,11)" fg:x="44785" fg:w="10"/><text x="54.9579%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (23 samples, 0.03%)</title><rect x="54.8301%" y="101" width="0.0281%" height="15" fill="rgb(236,162,54)" fg:x="44885" fg:w="23"/><text x="55.0801%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (191 samples, 0.23%)</title><rect x="54.9107%" y="85" width="0.2333%" height="15" fill="rgb(220,229,9)" fg:x="44951" fg:w="191"/><text x="55.1607%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (95 samples, 0.12%)</title><rect x="55.0280%" y="69" width="0.1160%" height="15" fill="rgb(250,87,22)" fg:x="45047" fg:w="95"/><text x="55.2780%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (368 samples, 0.45%)</title><rect x="54.7201%" y="117" width="0.4495%" height="15" fill="rgb(239,43,17)" fg:x="44795" fg:w="368"/><text x="54.9701%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (255 samples, 0.31%)</title><rect x="54.8582%" y="101" width="0.3115%" height="15" fill="rgb(231,177,25)" fg:x="44908" fg:w="255"/><text x="55.1082%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (21 samples, 0.03%)</title><rect x="55.1440%" y="85" width="0.0257%" height="15" fill="rgb(219,179,1)" fg:x="45142" fg:w="21"/><text x="55.3940%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (23 samples, 0.03%)</title><rect x="55.1697%" y="117" width="0.0281%" height="15" fill="rgb(238,219,53)" fg:x="45163" fg:w="23"/><text x="55.4197%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (13 samples, 0.02%)</title><rect x="55.1978%" y="117" width="0.0159%" height="15" fill="rgb(232,167,36)" fg:x="45186" fg:w="13"/><text x="55.4478%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (16 samples, 0.02%)</title><rect x="55.2234%" y="117" width="0.0195%" height="15" fill="rgb(244,19,51)" fg:x="45207" fg:w="16"/><text x="55.4734%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (205 samples, 0.25%)</title><rect x="55.3712%" y="101" width="0.2504%" height="15" fill="rgb(224,6,22)" fg:x="45328" fg:w="205"/><text x="55.6212%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (33 samples, 0.04%)</title><rect x="55.7499%" y="85" width="0.0403%" height="15" fill="rgb(224,145,5)" fg:x="45638" fg:w="33"/><text x="55.9999%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (105 samples, 0.13%)</title><rect x="55.7902%" y="85" width="0.1283%" height="15" fill="rgb(234,130,49)" fg:x="45671" fg:w="105"/><text x="56.0402%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (708 samples, 0.86%)</title><rect x="55.9185%" y="85" width="0.8649%" height="15" fill="rgb(254,6,2)" fg:x="45776" fg:w="708"/><text x="56.1685%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (43 samples, 0.05%)</title><rect x="56.7834%" y="85" width="0.0525%" height="15" fill="rgb(208,96,46)" fg:x="46484" fg:w="43"/><text x="57.0334%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (198 samples, 0.24%)</title><rect x="56.8359%" y="85" width="0.2419%" height="15" fill="rgb(239,3,39)" fg:x="46527" fg:w="198"/><text x="57.0859%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (33 samples, 0.04%)</title><rect x="57.1877%" y="69" width="0.0403%" height="15" fill="rgb(233,210,1)" fg:x="46815" fg:w="33"/><text x="57.4377%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (68 samples, 0.08%)</title><rect x="57.2280%" y="69" width="0.0831%" height="15" fill="rgb(244,137,37)" fg:x="46848" fg:w="68"/><text x="57.4780%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (294 samples, 0.36%)</title><rect x="57.3111%" y="69" width="0.3591%" height="15" fill="rgb(240,136,2)" fg:x="46916" fg:w="294"/><text x="57.5611%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (123 samples, 0.15%)</title><rect x="58.1283%" y="37" width="0.1503%" height="15" fill="rgb(239,18,37)" fg:x="47585" fg:w="123"/><text x="58.3783%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (617 samples, 0.75%)</title><rect x="57.7301%" y="53" width="0.7537%" height="15" fill="rgb(218,185,22)" fg:x="47259" fg:w="617"/><text x="57.9801%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (168 samples, 0.21%)</title><rect x="58.2786%" y="37" width="0.2052%" height="15" fill="rgb(225,218,4)" fg:x="47708" fg:w="168"/><text x="58.5286%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (838 samples, 1.02%)</title><rect x="57.6702%" y="69" width="1.0237%" height="15" fill="rgb(230,182,32)" fg:x="47210" fg:w="838"/><text x="57.9202%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (172 samples, 0.21%)</title><rect x="58.4838%" y="53" width="0.2101%" height="15" fill="rgb(242,56,43)" fg:x="47876" fg:w="172"/><text x="58.7338%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (275 samples, 0.34%)</title><rect x="58.6939%" y="69" width="0.3359%" height="15" fill="rgb(233,99,24)" fg:x="48048" fg:w="275"/><text x="58.9439%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (22 samples, 0.03%)</title><rect x="59.0396%" y="37" width="0.0269%" height="15" fill="rgb(234,209,42)" fg:x="48331" fg:w="22"/><text x="59.2896%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.05%)</title><rect x="59.0298%" y="69" width="0.0501%" height="15" fill="rgb(227,7,12)" fg:x="48323" fg:w="41"/><text x="59.2798%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (41 samples, 0.05%)</title><rect x="59.0298%" y="53" width="0.0501%" height="15" fill="rgb(245,203,43)" fg:x="48323" fg:w="41"/><text x="59.2798%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.01%)</title><rect x="59.0665%" y="37" width="0.0134%" height="15" fill="rgb(238,205,33)" fg:x="48353" fg:w="11"/><text x="59.3165%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1,644 samples, 2.01%)</title><rect x="57.0778%" y="85" width="2.0083%" height="15" fill="rgb(231,56,7)" fg:x="46725" fg:w="1644"/><text x="57.3278%" y="95.50">l..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2,913 samples, 3.56%)</title><rect x="55.6217%" y="101" width="3.5584%" height="15" fill="rgb(244,186,29)" fg:x="45533" fg:w="2913"/><text x="55.8717%" y="111.50">libs..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (72 samples, 0.09%)</title><rect x="59.0921%" y="85" width="0.0880%" height="15" fill="rgb(234,111,31)" fg:x="48374" fg:w="72"/><text x="59.3421%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (113 samples, 0.14%)</title><rect x="59.1801%" y="101" width="0.1380%" height="15" fill="rgb(241,149,10)" fg:x="48446" fg:w="113"/><text x="59.4301%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (34 samples, 0.04%)</title><rect x="59.3181%" y="101" width="0.0415%" height="15" fill="rgb(249,206,44)" fg:x="48559" fg:w="34"/><text x="59.5681%" y="111.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (3,885 samples, 4.75%)</title><rect x="54.6236%" y="133" width="4.7458%" height="15" fill="rgb(251,153,30)" fg:x="44716" fg:w="3885"/><text x="54.8736%" y="143.50">fusion..</text></g><g><title>libsystem_malloc.dylib`realloc (3,378 samples, 4.13%)</title><rect x="55.2430%" y="117" width="4.1265%" height="15" fill="rgb(239,152,38)" fg:x="45223" fg:w="3378"/><text x="55.4930%" y="127.50">libs..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.03%)</title><rect x="59.3694%" y="133" width="0.0318%" height="15" fill="rgb(249,139,47)" fg:x="48601" fg:w="26"/><text x="59.6194%" y="143.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4,201 samples, 5.13%)</title><rect x="54.3121%" y="149" width="5.1318%" height="15" fill="rgb(244,64,35)" fg:x="44461" fg:w="4201"/><text x="54.5621%" y="159.50">fusion..</text></g><g><title>libsystem_malloc.dylib`realloc (35 samples, 0.04%)</title><rect x="59.4012%" y="133" width="0.0428%" height="15" fill="rgb(216,46,15)" fg:x="48627" fg:w="35"/><text x="59.6512%" y="143.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (62 samples, 0.08%)</title><rect x="59.4439%" y="149" width="0.0757%" height="15" fill="rgb(250,74,19)" fg:x="48662" fg:w="62"/><text x="59.6939%" y="159.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::get_dual_node_index (95 samples, 0.12%)</title><rect x="59.5197%" y="149" width="0.1160%" height="15" fill="rgb(249,42,33)" fg:x="48724" fg:w="95"/><text x="59.7697%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (108 samples, 0.13%)</title><rect x="59.8104%" y="133" width="0.1319%" height="15" fill="rgb(242,149,17)" fg:x="48962" fg:w="108"/><text x="60.0604%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (253 samples, 0.31%)</title><rect x="59.6418%" y="149" width="0.3091%" height="15" fill="rgb(244,29,21)" fg:x="48824" fg:w="253"/><text x="59.8918%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (221 samples, 0.27%)</title><rect x="59.9656%" y="149" width="0.2700%" height="15" fill="rgb(220,130,37)" fg:x="49089" fg:w="221"/><text x="60.2156%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (148 samples, 0.18%)</title><rect x="60.0547%" y="133" width="0.1808%" height="15" fill="rgb(211,67,2)" fg:x="49162" fg:w="148"/><text x="60.3047%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (148 samples, 0.18%)</title><rect x="60.0547%" y="117" width="0.1808%" height="15" fill="rgb(235,68,52)" fg:x="49162" fg:w="148"/><text x="60.3047%" y="127.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::prepare_dual_node_growth_single (11,066 samples, 13.52%)</title><rect x="46.7299%" y="165" width="13.5179%" height="15" fill="rgb(246,142,3)" fg:x="38254" fg:w="11066"/><text x="46.9799%" y="175.50">fusion_blossom`fusio..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (10 samples, 0.01%)</title><rect x="60.2355%" y="149" width="0.0122%" height="15" fill="rgb(241,25,7)" fg:x="49310" fg:w="10"/><text x="60.4855%" y="159.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::renew_active_list (1,297 samples, 1.58%)</title><rect x="60.2477%" y="165" width="1.5844%" height="15" fill="rgb(242,119,39)" fg:x="49320" fg:w="1297"/><text x="60.4977%" y="175.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::Vertex::is_mirror_blocked (10 samples, 0.01%)</title><rect x="61.8321%" y="165" width="0.0122%" height="15" fill="rgb(241,98,45)" fg:x="50617" fg:w="10"/><text x="62.0821%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (18 samples, 0.02%)</title><rect x="61.8443%" y="165" width="0.0220%" height="15" fill="rgb(254,28,30)" fg:x="50627" fg:w="18"/><text x="62.0943%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (24 samples, 0.03%)</title><rect x="61.8663%" y="165" width="0.0293%" height="15" fill="rgb(241,142,54)" fg:x="50645" fg:w="24"/><text x="62.1163%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (26 samples, 0.03%)</title><rect x="61.8956%" y="165" width="0.0318%" height="15" fill="rgb(222,85,15)" fg:x="50669" fg:w="26"/><text x="62.1456%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (12 samples, 0.01%)</title><rect x="61.9274%" y="165" width="0.0147%" height="15" fill="rgb(210,85,47)" fg:x="50695" fg:w="12"/><text x="62.1774%" y="175.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::prepare_all (15,192 samples, 18.56%)</title><rect x="43.3852%" y="181" width="18.5581%" height="15" fill="rgb(224,206,25)" fg:x="35516" fg:w="15192"/><text x="43.6352%" y="191.50">fusion_blossom`&lt;fusion_blosso..</text></g><g><title>fusion_blossom`core::ptr::drop_in_place&lt;fusion_blossom::dual_module::MaxUpdateLength&gt; (27 samples, 0.03%)</title><rect x="61.9433%" y="181" width="0.0330%" height="15" fill="rgb(243,201,19)" fg:x="50708" fg:w="27"/><text x="62.1933%" y="191.50"></text></g><g><title>fusion_blossom`alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (32 samples, 0.04%)</title><rect x="62.0166%" y="165" width="0.0391%" height="15" fill="rgb(236,59,4)" fg:x="50768" fg:w="32"/><text x="62.2666%" y="175.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module::MaxUpdateLength as core::cmp::Ord&gt;::cmp (15 samples, 0.02%)</title><rect x="62.0776%" y="149" width="0.0183%" height="15" fill="rgb(254,179,45)" fg:x="50818" fg:w="15"/><text x="62.3276%" y="159.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module::MaxUpdateLength as core::cmp::Ord&gt;::cmp (303 samples, 0.37%)</title><rect x="62.3830%" y="133" width="0.3701%" height="15" fill="rgb(226,14,10)" fg:x="51068" fg:w="303"/><text x="62.6330%" y="143.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::_&lt;impl core::cmp::Ord for fusion_blossom::util::ArcRwLock&lt;fusion_blossom::dual_module::DualNode&gt;&gt;::cmp (161 samples, 0.20%)</title><rect x="62.5565%" y="117" width="0.1967%" height="15" fill="rgb(244,27,41)" fg:x="51210" fg:w="161"/><text x="62.8065%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (10 samples, 0.01%)</title><rect x="62.7544%" y="53" width="0.0122%" height="15" fill="rgb(235,35,32)" fg:x="51372" fg:w="10"/><text x="63.0044%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (10 samples, 0.01%)</title><rect x="62.7544%" y="37" width="0.0122%" height="15" fill="rgb(218,68,31)" fg:x="51372" fg:w="10"/><text x="63.0044%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (14 samples, 0.02%)</title><rect x="62.7532%" y="69" width="0.0171%" height="15" fill="rgb(207,120,37)" fg:x="51371" fg:w="14"/><text x="63.0032%" y="79.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.02%)</title><rect x="62.7532%" y="133" width="0.0195%" height="15" fill="rgb(227,98,0)" fg:x="51371" fg:w="16"/><text x="63.0032%" y="143.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (16 samples, 0.02%)</title><rect x="62.7532%" y="117" width="0.0195%" height="15" fill="rgb(207,7,3)" fg:x="51371" fg:w="16"/><text x="63.0032%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (16 samples, 0.02%)</title><rect x="62.7532%" y="101" width="0.0195%" height="15" fill="rgb(206,98,19)" fg:x="51371" fg:w="16"/><text x="63.0032%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.02%)</title><rect x="62.7532%" y="85" width="0.0195%" height="15" fill="rgb(217,5,26)" fg:x="51371" fg:w="16"/><text x="63.0032%" y="95.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::GroupMaxUpdateLength::add (699 samples, 0.85%)</title><rect x="61.9763%" y="181" width="0.8539%" height="15" fill="rgb(235,190,38)" fg:x="50735" fg:w="699"/><text x="62.2263%" y="191.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::GroupMaxUpdateLength::add_pending_stop (634 samples, 0.77%)</title><rect x="62.0557%" y="165" width="0.7745%" height="15" fill="rgb(247,86,24)" fg:x="50800" fg:w="634"/><text x="62.3057%" y="175.50"></text></g><g><title>fusion_blossom`alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (601 samples, 0.73%)</title><rect x="62.0960%" y="149" width="0.7342%" height="15" fill="rgb(205,101,16)" fg:x="50833" fg:w="601"/><text x="62.3460%" y="159.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::_&lt;impl core::cmp::Ord for fusion_blossom::util::ArcRwLock&lt;fusion_blossom::dual_module::DualNode&gt;&gt;::cmp (47 samples, 0.06%)</title><rect x="62.7727%" y="133" width="0.0574%" height="15" fill="rgb(246,168,33)" fg:x="51387" fg:w="47"/><text x="63.0227%" y="143.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::get_dual_node_index (22 samples, 0.03%)</title><rect x="62.8387%" y="181" width="0.0269%" height="15" fill="rgb(231,114,1)" fg:x="51441" fg:w="22"/><text x="63.0887%" y="191.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::compute_maximum_update_length (21,891 samples, 26.74%)</title><rect x="36.1511%" y="197" width="26.7413%" height="15" fill="rgb(207,184,53)" fg:x="29594" fg:w="21891"/><text x="36.4011%" y="207.50">fusion_blossom`&lt;fusion_blossom::dual_module..</text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::prepare_dual_node_growth_single (22 samples, 0.03%)</title><rect x="62.8656%" y="181" width="0.0269%" height="15" fill="rgb(224,95,51)" fg:x="51463" fg:w="22"/><text x="63.1156%" y="191.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::compute_maximum_update_length_dual_node (82 samples, 0.10%)</title><rect x="62.8924%" y="197" width="0.1002%" height="15" fill="rgb(212,188,45)" fg:x="51485" fg:w="82"/><text x="63.1424%" y="207.50"></text></g><g><title>fusion_blossom`core::ptr::drop_in_place&lt;fusion_blossom::dual_module::MaxUpdateLength&gt; (21 samples, 0.03%)</title><rect x="62.9926%" y="197" width="0.0257%" height="15" fill="rgb(223,154,38)" fg:x="51567" fg:w="21"/><text x="63.2426%" y="207.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt; as fusion_blossom::dual_module::DualModuleImpl&gt;::compute_maximum_update_length (22,006 samples, 26.88%)</title><rect x="36.1511%" y="229" width="26.8818%" height="15" fill="rgb(251,22,52)" fg:x="29594" fg:w="22006"/><text x="36.4011%" y="239.50">fusion_blossom`&lt;fusion_blossom::dual_module..</text></g><g><title>fusion_blossom`fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt;::iterative_compute_maximum_update_length (22,006 samples, 26.88%)</title><rect x="36.1511%" y="213" width="26.8818%" height="15" fill="rgb(229,209,22)" fg:x="29594" fg:w="22006"/><text x="36.4011%" y="223.50">fusion_blossom`fusion_blossom::dual_module_..</text></g><g><title>fusion_blossom`fusion_blossom::dual_module::GroupMaxUpdateLength::add (12 samples, 0.01%)</title><rect x="63.0183%" y="197" width="0.0147%" height="15" fill="rgb(234,138,34)" fg:x="51588" fg:w="12"/><text x="63.2683%" y="207.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::set_grow_state (26 samples, 0.03%)</title><rect x="63.8660%" y="213" width="0.0318%" height="15" fill="rgb(212,95,11)" fg:x="52282" fg:w="26"/><text x="64.1160%" y="223.50"></text></g><g><title>fusion_blossom`alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (14 samples, 0.02%)</title><rect x="63.8990%" y="213" width="0.0171%" height="15" fill="rgb(240,179,47)" fg:x="52309" fg:w="14"/><text x="64.1490%" y="223.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="63.9540%" y="117" width="0.0183%" height="15" fill="rgb(240,163,11)" fg:x="52354" fg:w="15"/><text x="64.2040%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (11 samples, 0.01%)</title><rect x="63.9589%" y="101" width="0.0134%" height="15" fill="rgb(236,37,12)" fg:x="52358" fg:w="11"/><text x="64.2089%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (11 samples, 0.01%)</title><rect x="63.9589%" y="85" width="0.0134%" height="15" fill="rgb(232,164,16)" fg:x="52358" fg:w="11"/><text x="64.2089%" y="95.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::prepare_dual_node_growth_single (32 samples, 0.04%)</title><rect x="63.9344%" y="149" width="0.0391%" height="15" fill="rgb(244,205,15)" fg:x="52338" fg:w="32"/><text x="64.1844%" y="159.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (19 samples, 0.02%)</title><rect x="63.9503%" y="133" width="0.0232%" height="15" fill="rgb(223,117,47)" fg:x="52351" fg:w="19"/><text x="64.2003%" y="143.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt;::iterative_prepare_nodes_shrink (36 samples, 0.04%)</title><rect x="63.9308%" y="165" width="0.0440%" height="15" fill="rgb(244,107,35)" fg:x="52335" fg:w="36"/><text x="64.1808%" y="175.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt; as fusion_blossom::dual_module::DualModuleImpl&gt;::prepare_nodes_shrink (38 samples, 0.05%)</title><rect x="63.9295%" y="181" width="0.0464%" height="15" fill="rgb(205,140,8)" fg:x="52334" fg:w="38"/><text x="64.1795%" y="191.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="63.9918%" y="133" width="0.0110%" height="15" fill="rgb(228,84,46)" fg:x="52385" fg:w="9"/><text x="64.2418%" y="143.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.01%)</title><rect x="63.9906%" y="149" width="0.0134%" height="15" fill="rgb(254,188,9)" fg:x="52384" fg:w="11"/><text x="64.2406%" y="159.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt; as fusion_blossom::dual_module::DualModuleImpl&gt;::add_dual_node (66 samples, 0.08%)</title><rect x="63.9259%" y="197" width="0.0806%" height="15" fill="rgb(206,112,54)" fg:x="52331" fg:w="66"/><text x="64.1759%" y="207.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt;::iterative_add_blossom (25 samples, 0.03%)</title><rect x="63.9760%" y="181" width="0.0305%" height="15" fill="rgb(216,84,49)" fg:x="52372" fg:w="25"/><text x="64.2260%" y="191.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::add_dual_node (25 samples, 0.03%)</title><rect x="63.9760%" y="165" width="0.0305%" height="15" fill="rgb(214,194,35)" fg:x="52372" fg:w="25"/><text x="64.2260%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (45 samples, 0.05%)</title><rect x="64.2960%" y="101" width="0.0550%" height="15" fill="rgb(249,28,3)" fg:x="52634" fg:w="45"/><text x="64.5460%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (39 samples, 0.05%)</title><rect x="64.3033%" y="85" width="0.0476%" height="15" fill="rgb(222,56,52)" fg:x="52640" fg:w="39"/><text x="64.5533%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.02%)</title><rect x="64.3327%" y="69" width="0.0183%" height="15" fill="rgb(245,217,50)" fg:x="52664" fg:w="15"/><text x="64.5827%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.02%)</title><rect x="64.3327%" y="53" width="0.0183%" height="15" fill="rgb(213,201,24)" fg:x="52664" fg:w="15"/><text x="64.5827%" y="63.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (61 samples, 0.07%)</title><rect x="64.2814%" y="149" width="0.0745%" height="15" fill="rgb(248,116,28)" fg:x="52622" fg:w="61"/><text x="64.5314%" y="159.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (57 samples, 0.07%)</title><rect x="64.2862%" y="133" width="0.0696%" height="15" fill="rgb(219,72,43)" fg:x="52626" fg:w="57"/><text x="64.5362%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (51 samples, 0.06%)</title><rect x="64.2936%" y="117" width="0.0623%" height="15" fill="rgb(209,138,14)" fg:x="52632" fg:w="51"/><text x="64.5436%" y="127.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt;::iterative_prepare_nodes_shrink (301 samples, 0.37%)</title><rect x="64.0114%" y="181" width="0.3677%" height="15" fill="rgb(222,18,33)" fg:x="52401" fg:w="301"/><text x="64.2614%" y="191.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::prepare_dual_node_growth_single (295 samples, 0.36%)</title><rect x="64.0187%" y="165" width="0.3604%" height="15" fill="rgb(213,199,7)" fg:x="52407" fg:w="295"/><text x="64.2687%" y="175.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt; as fusion_blossom::dual_module::DualModuleImpl&gt;::prepare_nodes_shrink (306 samples, 0.37%)</title><rect x="64.0065%" y="197" width="0.3738%" height="15" fill="rgb(250,110,10)" fg:x="52397" fg:w="306"/><text x="64.2565%" y="207.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::DualModuleInterface::create_blossom (379 samples, 0.46%)</title><rect x="63.9247%" y="213" width="0.4630%" height="15" fill="rgb(248,123,6)" fg:x="52330" fg:w="379"/><text x="64.1747%" y="223.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::set_grow_state (75 samples, 0.09%)</title><rect x="64.5672%" y="197" width="0.0916%" height="15" fill="rgb(206,91,31)" fg:x="52856" fg:w="75"/><text x="64.8172%" y="207.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::_&lt;impl fusion_blossom::util::ArcRwLock&lt;fusion_blossom::dual_module::DualNode&gt;&gt;::get_representative_vertex (21 samples, 0.03%)</title><rect x="64.6588%" y="197" width="0.0257%" height="15" fill="rgb(211,154,13)" fg:x="52931" fg:w="21"/><text x="64.9088%" y="207.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::_&lt;impl fusion_blossom::util::ArcRwLock&lt;fusion_blossom::dual_module::DualNode&gt;&gt;::set_grow_state (31 samples, 0.04%)</title><rect x="64.6845%" y="197" width="0.0379%" height="15" fill="rgb(225,148,7)" fg:x="52952" fg:w="31"/><text x="64.9345%" y="207.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::DualModuleInterface::set_grow_state (289 samples, 0.35%)</title><rect x="64.3876%" y="213" width="0.3530%" height="15" fill="rgb(220,160,43)" fg:x="52709" fg:w="289"/><text x="64.6376%" y="223.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt;::iterative_set_grow_state (15 samples, 0.02%)</title><rect x="64.7223%" y="197" width="0.0183%" height="15" fill="rgb(213,52,39)" fg:x="52983" fg:w="15"/><text x="64.9723%" y="207.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module::MaxUpdateLength as core::cmp::Ord&gt;::cmp (376 samples, 0.46%)</title><rect x="64.8005%" y="197" width="0.4593%" height="15" fill="rgb(243,137,7)" fg:x="53047" fg:w="376"/><text x="65.0505%" y="207.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module::MaxUpdateLength as core::cmp::Ord&gt;::cmp (5,633 samples, 6.88%)</title><rect x="66.7086%" y="181" width="6.8811%" height="15" fill="rgb(230,79,13)" fg:x="54609" fg:w="5633"/><text x="66.9586%" y="191.50">fusion_bl..</text></g><g><title>fusion_blossom`fusion_blossom::dual_module::_&lt;impl core::cmp::Ord for fusion_blossom::util::ArcRwLock&lt;fusion_blossom::dual_module::DualNode&gt;&gt;::cmp (2,934 samples, 3.58%)</title><rect x="70.0056%" y="165" width="3.5841%" height="15" fill="rgb(247,105,23)" fg:x="57308" fg:w="2934"/><text x="70.2556%" y="175.50">fusi..</text></g><g><title>fusion_blossom`fusion_blossom::dual_module::GroupMaxUpdateLength::pop (8,456 samples, 10.33%)</title><rect x="64.7407%" y="213" width="10.3296%" height="15" fill="rgb(223,179,41)" fg:x="52998" fg:w="8456"/><text x="64.9907%" y="223.50">fusion_blossom`..</text></g><g><title>fusion_blossom`alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (8,031 samples, 9.81%)</title><rect x="65.2598%" y="197" width="9.8104%" height="15" fill="rgb(218,9,34)" fg:x="53423" fg:w="8031"/><text x="65.5098%" y="207.50">fusion_blossom..</text></g><g><title>fusion_blossom`fusion_blossom::dual_module::_&lt;impl core::cmp::Ord for fusion_blossom::util::ArcRwLock&lt;fusion_blossom::dual_module::DualNode&gt;&gt;::cmp (1,212 samples, 1.48%)</title><rect x="73.5897%" y="181" width="1.4805%" height="15" fill="rgb(222,106,8)" fg:x="60242" fg:w="1212"/><text x="73.8397%" y="191.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::_&lt;impl fusion_blossom::util::ArcRwLock&lt;fusion_blossom::dual_module::DualNode&gt;&gt;::set_grow_state (42 samples, 0.05%)</title><rect x="75.0727%" y="213" width="0.0513%" height="15" fill="rgb(211,220,0)" fg:x="61456" fg:w="42"/><text x="75.3227%" y="223.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::DualModuleInterface::set_grow_state (11 samples, 0.01%)</title><rect x="75.1582%" y="197" width="0.0134%" height="15" fill="rgb(229,52,16)" fg:x="61526" fg:w="11"/><text x="75.4082%" y="207.50"></text></g><g><title>fusion_blossom`fusion_blossom::primal_module_serial::PrimalModuleSerial::augment_tree_given_matched (12 samples, 0.01%)</title><rect x="75.1753%" y="197" width="0.0147%" height="15" fill="rgb(212,155,18)" fg:x="61540" fg:w="12"/><text x="75.4253%" y="207.50"></text></g><g><title>fusion_blossom`core::ptr::drop_in_place&lt;fusion_blossom::primal_module_serial::AlternatingTreeNode&gt; (11 samples, 0.01%)</title><rect x="75.2009%" y="181" width="0.0134%" height="15" fill="rgb(242,21,14)" fg:x="61561" fg:w="11"/><text x="75.4509%" y="191.50"></text></g><g><title>fusion_blossom`fusion_blossom::primal_module_serial::PrimalModuleSerial::match_subtree (28 samples, 0.03%)</title><rect x="75.1900%" y="197" width="0.0342%" height="15" fill="rgb(222,19,48)" fg:x="61552" fg:w="28"/><text x="75.4400%" y="207.50"></text></g><g><title>fusion_blossom`fusion_blossom::primal_module_serial::PrimalModuleSerial::augment_tree_given_matched (86 samples, 0.11%)</title><rect x="75.1240%" y="213" width="0.1051%" height="15" fill="rgb(232,45,27)" fg:x="61498" fg:w="86"/><text x="75.3740%" y="223.50"></text></g><g><title>fusion_blossom`fusion_blossom::primal_module_serial::PrimalModuleSerial::get_outer_node (272 samples, 0.33%)</title><rect x="75.2352%" y="213" width="0.3323%" height="15" fill="rgb(249,103,42)" fg:x="61589" fg:w="272"/><text x="75.4852%" y="223.50"></text></g><g><title>fusion_blossom`fusion_blossom::primal_module_serial::PrimalModuleSerial::get_primal_node_internal_ptr_option (359 samples, 0.44%)</title><rect x="75.5674%" y="213" width="0.4385%" height="15" fill="rgb(246,81,33)" fg:x="61861" fg:w="359"/><text x="75.8174%" y="223.50"></text></g><g><title>fusion_blossom`fusion_blossom::util::WeakRwLock&lt;T&gt;::upgrade_force (76 samples, 0.09%)</title><rect x="76.0060%" y="213" width="0.0928%" height="15" fill="rgb(252,33,42)" fg:x="62220" fg:w="76"/><text x="76.2560%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (12 samples, 0.01%)</title><rect x="76.0988%" y="213" width="0.0147%" height="15" fill="rgb(209,212,41)" fg:x="62296" fg:w="12"/><text x="76.3488%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.02%)</title><rect x="76.1183%" y="181" width="0.0183%" height="15" fill="rgb(207,154,6)" fg:x="62312" fg:w="15"/><text x="76.3683%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.03%)</title><rect x="76.1135%" y="213" width="0.0257%" height="15" fill="rgb(223,64,47)" fg:x="62308" fg:w="21"/><text x="76.3635%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.02%)</title><rect x="76.1159%" y="197" width="0.0232%" height="15" fill="rgb(211,161,38)" fg:x="62310" fg:w="19"/><text x="76.3659%" y="207.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::primal_module_serial::PrimalModuleSerial as fusion_blossom::primal_module::PrimalModuleImpl&gt;::resolve (10,732 samples, 13.11%)</title><rect x="63.0390%" y="229" width="13.1099%" height="15" fill="rgb(219,138,40)" fg:x="51605" fg:w="10732"/><text x="63.2890%" y="239.50">fusion_blossom`&lt;fusi..</text></g><g><title>fusion_blossom`fusion_blossom::dual_module::DualModuleInterface::create_defect_node (18 samples, 0.02%)</title><rect x="76.1525%" y="229" width="0.0220%" height="15" fill="rgb(241,228,46)" fg:x="62340" fg:w="18"/><text x="76.4025%" y="239.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::add_dual_node (17 samples, 0.02%)</title><rect x="76.8305%" y="181" width="0.0208%" height="15" fill="rgb(223,209,38)" fg:x="62895" fg:w="17"/><text x="77.0805%" y="191.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::_&lt;impl fusion_blossom::util::ArcRwLock&lt;fusion_blossom::dual_module::DualNode&gt;&gt;::get_representative_vertex (82 samples, 0.10%)</title><rect x="76.8513%" y="181" width="0.1002%" height="15" fill="rgb(236,164,45)" fg:x="62912" fg:w="82"/><text x="77.1013%" y="191.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$malloc (21 samples, 0.03%)</title><rect x="87.6219%" y="133" width="0.0257%" height="15" fill="rgb(231,15,5)" fg:x="71729" fg:w="21"/><text x="87.8719%" y="143.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$realloc (11 samples, 0.01%)</title><rect x="87.6475%" y="133" width="0.0134%" height="15" fill="rgb(252,35,15)" fg:x="71750" fg:w="11"/><text x="87.8975%" y="143.50"></text></g><g><title>fusion_blossom`__rdl_alloc (16 samples, 0.02%)</title><rect x="87.6609%" y="133" width="0.0195%" height="15" fill="rgb(248,181,18)" fg:x="71761" fg:w="16"/><text x="87.9109%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (39 samples, 0.05%)</title><rect x="87.8368%" y="101" width="0.0476%" height="15" fill="rgb(233,39,42)" fg:x="71905" fg:w="39"/><text x="88.0868%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (82 samples, 0.10%)</title><rect x="87.9260%" y="85" width="0.1002%" height="15" fill="rgb(238,110,33)" fg:x="71978" fg:w="82"/><text x="88.1760%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (35 samples, 0.04%)</title><rect x="87.9834%" y="69" width="0.0428%" height="15" fill="rgb(233,195,10)" fg:x="72025" fg:w="35"/><text x="88.2334%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (258 samples, 0.32%)</title><rect x="87.7318%" y="117" width="0.3152%" height="15" fill="rgb(254,105,3)" fg:x="71819" fg:w="258"/><text x="87.9818%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (133 samples, 0.16%)</title><rect x="87.8845%" y="101" width="0.1625%" height="15" fill="rgb(221,225,9)" fg:x="71944" fg:w="133"/><text x="88.1345%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (17 samples, 0.02%)</title><rect x="88.0262%" y="85" width="0.0208%" height="15" fill="rgb(224,227,45)" fg:x="72060" fg:w="17"/><text x="88.2762%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (21 samples, 0.03%)</title><rect x="88.0470%" y="117" width="0.0257%" height="15" fill="rgb(229,198,43)" fg:x="72077" fg:w="21"/><text x="88.2970%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.01%)</title><rect x="88.0775%" y="117" width="0.0110%" height="15" fill="rgb(206,209,35)" fg:x="72102" fg:w="9"/><text x="88.3275%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (11 samples, 0.01%)</title><rect x="88.0885%" y="117" width="0.0134%" height="15" fill="rgb(245,195,53)" fg:x="72111" fg:w="11"/><text x="88.3385%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (12 samples, 0.01%)</title><rect x="88.1618%" y="101" width="0.0147%" height="15" fill="rgb(240,92,26)" fg:x="72171" fg:w="12"/><text x="88.4118%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (90 samples, 0.11%)</title><rect x="88.2302%" y="85" width="0.1099%" height="15" fill="rgb(207,40,23)" fg:x="72227" fg:w="90"/><text x="88.4802%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (27 samples, 0.03%)</title><rect x="88.3401%" y="85" width="0.0330%" height="15" fill="rgb(223,111,35)" fg:x="72317" fg:w="27"/><text x="88.5901%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (83 samples, 0.10%)</title><rect x="88.3792%" y="85" width="0.1014%" height="15" fill="rgb(229,147,28)" fg:x="72349" fg:w="83"/><text x="88.6292%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (26 samples, 0.03%)</title><rect x="88.5356%" y="69" width="0.0318%" height="15" fill="rgb(211,29,28)" fg:x="72477" fg:w="26"/><text x="88.7856%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (45 samples, 0.05%)</title><rect x="88.5673%" y="69" width="0.0550%" height="15" fill="rgb(228,72,33)" fg:x="72503" fg:w="45"/><text x="88.8173%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (98 samples, 0.12%)</title><rect x="88.6223%" y="69" width="0.1197%" height="15" fill="rgb(205,214,31)" fg:x="72548" fg:w="98"/><text x="88.8723%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (68 samples, 0.08%)</title><rect x="88.9057%" y="37" width="0.0831%" height="15" fill="rgb(224,111,15)" fg:x="72780" fg:w="68"/><text x="89.1557%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (237 samples, 0.29%)</title><rect x="88.7604%" y="53" width="0.2895%" height="15" fill="rgb(253,21,26)" fg:x="72661" fg:w="237"/><text x="89.0104%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (50 samples, 0.06%)</title><rect x="88.9888%" y="37" width="0.0611%" height="15" fill="rgb(245,139,43)" fg:x="72848" fg:w="50"/><text x="89.2388%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (280 samples, 0.34%)</title><rect x="88.7420%" y="69" width="0.3420%" height="15" fill="rgb(252,170,7)" fg:x="72646" fg:w="280"/><text x="88.9920%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (28 samples, 0.03%)</title><rect x="89.0499%" y="53" width="0.0342%" height="15" fill="rgb(231,118,14)" fg:x="72898" fg:w="28"/><text x="89.2999%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (786 samples, 0.96%)</title><rect x="88.4806%" y="85" width="0.9602%" height="15" fill="rgb(238,83,0)" fg:x="72432" fg:w="786"/><text x="88.7306%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (292 samples, 0.36%)</title><rect x="89.0841%" y="69" width="0.3567%" height="15" fill="rgb(221,39,39)" fg:x="72926" fg:w="292"/><text x="89.3341%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1,085 samples, 1.33%)</title><rect x="88.1764%" y="101" width="1.3254%" height="15" fill="rgb(222,119,46)" fg:x="72183" fg:w="1085"/><text x="88.4264%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (48 samples, 0.06%)</title><rect x="89.4432%" y="85" width="0.0586%" height="15" fill="rgb(222,165,49)" fg:x="73220" fg:w="48"/><text x="89.6932%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (49 samples, 0.06%)</title><rect x="89.5018%" y="101" width="0.0599%" height="15" fill="rgb(219,113,52)" fg:x="73268" fg:w="49"/><text x="89.7518%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (9 samples, 0.01%)</title><rect x="89.5617%" y="101" width="0.0110%" height="15" fill="rgb(214,7,15)" fg:x="73317" fg:w="9"/><text x="89.8117%" y="111.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (1,545 samples, 1.89%)</title><rect x="87.6866%" y="133" width="1.8873%" height="15" fill="rgb(235,32,4)" fg:x="71782" fg:w="1545"/><text x="87.9366%" y="143.50">f..</text></g><g><title>libsystem_malloc.dylib`realloc (1,205 samples, 1.47%)</title><rect x="88.1019%" y="117" width="1.4720%" height="15" fill="rgb(238,90,54)" fg:x="72122" fg:w="1205"/><text x="88.3519%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.02%)</title><rect x="89.5739%" y="133" width="0.0171%" height="15" fill="rgb(213,208,19)" fg:x="73327" fg:w="14"/><text x="89.8239%" y="143.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2,114 samples, 2.58%)</title><rect x="87.0233%" y="149" width="2.5824%" height="15" fill="rgb(233,156,4)" fg:x="71239" fg:w="2114"/><text x="87.2733%" y="159.50">fu..</text></g><g><title>libsystem_malloc.dylib`realloc (12 samples, 0.01%)</title><rect x="89.5910%" y="133" width="0.0147%" height="15" fill="rgb(207,194,5)" fg:x="73341" fg:w="12"/><text x="89.8410%" y="143.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (46 samples, 0.06%)</title><rect x="89.6057%" y="149" width="0.0562%" height="15" fill="rgb(206,111,30)" fg:x="73353" fg:w="46"/><text x="89.8557%" y="159.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::register_dual_node_ptr (94 samples, 0.11%)</title><rect x="89.6643%" y="149" width="0.1148%" height="15" fill="rgb(243,70,54)" fg:x="73401" fg:w="94"/><text x="89.9143%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.02%)</title><rect x="89.8475%" y="133" width="0.0171%" height="15" fill="rgb(242,28,8)" fg:x="73551" fg:w="14"/><text x="90.0975%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (17 samples, 0.02%)</title><rect x="90.0638%" y="101" width="0.0208%" height="15" fill="rgb(219,106,18)" fg:x="73728" fg:w="17"/><text x="90.3138%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (243 samples, 0.30%)</title><rect x="89.8781%" y="117" width="0.2968%" height="15" fill="rgb(244,222,10)" fg:x="73576" fg:w="243"/><text x="90.1281%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (74 samples, 0.09%)</title><rect x="90.0845%" y="101" width="0.0904%" height="15" fill="rgb(236,179,52)" fg:x="73745" fg:w="74"/><text x="90.3345%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.01%)</title><rect x="90.1749%" y="117" width="0.0110%" height="15" fill="rgb(213,23,39)" fg:x="73819" fg:w="9"/><text x="90.4249%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (334 samples, 0.41%)</title><rect x="89.7791%" y="149" width="0.4080%" height="15" fill="rgb(238,48,10)" fg:x="73495" fg:w="334"/><text x="90.0291%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (264 samples, 0.32%)</title><rect x="89.8647%" y="133" width="0.3225%" height="15" fill="rgb(251,196,23)" fg:x="73565" fg:w="264"/><text x="90.1147%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.01%)</title><rect x="90.1871%" y="149" width="0.0134%" height="15" fill="rgb(250,152,24)" fg:x="73829" fg:w="11"/><text x="90.4371%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.04%)</title><rect x="90.2006%" y="149" width="0.0366%" height="15" fill="rgb(209,150,17)" fg:x="73840" fg:w="30"/><text x="90.4506%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (18 samples, 0.02%)</title><rect x="90.2152%" y="133" width="0.0220%" height="15" fill="rgb(234,202,34)" fg:x="73852" fg:w="18"/><text x="90.4652%" y="143.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::add_dual_node (10,845 samples, 13.25%)</title><rect x="77.0015%" y="165" width="13.2479%" height="15" fill="rgb(253,148,53)" fg:x="63035" fg:w="10845"/><text x="77.2515%" y="175.50">fusion_blossom`&lt;fusi..</text></g><g><title>fusion_blossom`__rdl_alloc (13 samples, 0.02%)</title><rect x="90.2556%" y="165" width="0.0159%" height="15" fill="rgb(218,129,16)" fg:x="73885" fg:w="13"/><text x="90.5056%" y="175.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (36 samples, 0.04%)</title><rect x="90.2714%" y="165" width="0.0440%" height="15" fill="rgb(216,85,19)" fg:x="73898" fg:w="36"/><text x="90.5214%" y="175.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::get_vertex_index (9 samples, 0.01%)</title><rect x="90.3154%" y="165" width="0.0110%" height="15" fill="rgb(235,228,7)" fg:x="73934" fg:w="9"/><text x="90.5654%" y="175.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::register_dual_node_ptr (25 samples, 0.03%)</title><rect x="90.3264%" y="165" width="0.0305%" height="15" fill="rgb(245,175,0)" fg:x="73943" fg:w="25"/><text x="90.5764%" y="175.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt;::iterative_add_defect_node (10,985 samples, 13.42%)</title><rect x="76.9515%" y="181" width="13.4189%" height="15" fill="rgb(208,168,36)" fg:x="62994" fg:w="10985"/><text x="77.2015%" y="191.50">fusion_blossom`fusio..</text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt; as fusion_blossom::dual_module::DualModuleImpl&gt;::add_dual_node (11,182 samples, 13.66%)</title><rect x="76.7731%" y="197" width="13.6596%" height="15" fill="rgb(246,171,24)" fg:x="62848" fg:w="11182"/><text x="77.0231%" y="207.50">fusion_blossom`&lt;fusio..</text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::get_vertex_index (51 samples, 0.06%)</title><rect x="90.3704%" y="181" width="0.0623%" height="15" fill="rgb(215,142,24)" fg:x="73979" fg:w="51"/><text x="90.6204%" y="191.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::_&lt;impl fusion_blossom::util::ArcRwLock&lt;fusion_blossom::dual_module::DualNode&gt;&gt;::get_representative_vertex (18 samples, 0.02%)</title><rect x="90.4412%" y="197" width="0.0220%" height="15" fill="rgb(250,187,7)" fg:x="74037" fg:w="18"/><text x="90.6912%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (67 samples, 0.08%)</title><rect x="90.5524%" y="181" width="0.0818%" height="15" fill="rgb(228,66,33)" fg:x="74128" fg:w="67"/><text x="90.8024%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (20 samples, 0.02%)</title><rect x="90.8639%" y="149" width="0.0244%" height="15" fill="rgb(234,215,21)" fg:x="74383" fg:w="20"/><text x="91.1139%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (226 samples, 0.28%)</title><rect x="90.6868%" y="165" width="0.2761%" height="15" fill="rgb(222,191,20)" fg:x="74238" fg:w="226"/><text x="90.9368%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (61 samples, 0.07%)</title><rect x="90.8883%" y="149" width="0.0745%" height="15" fill="rgb(245,79,54)" fg:x="74403" fg:w="61"/><text x="91.1383%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (31 samples, 0.04%)</title><rect x="90.9628%" y="165" width="0.0379%" height="15" fill="rgb(240,10,37)" fg:x="74464" fg:w="31"/><text x="91.2128%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (434 samples, 0.53%)</title><rect x="90.4718%" y="197" width="0.5302%" height="15" fill="rgb(214,192,32)" fg:x="74062" fg:w="434"/><text x="90.7218%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (301 samples, 0.37%)</title><rect x="90.6342%" y="181" width="0.3677%" height="15" fill="rgb(209,36,54)" fg:x="74195" fg:w="301"/><text x="90.8842%" y="191.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::DualModuleInterface::create_defect_node (12,125 samples, 14.81%)</title><rect x="76.2210%" y="213" width="14.8115%" height="15" fill="rgb(220,10,11)" fg:x="62396" fg:w="12125"/><text x="76.4710%" y="223.50">fusion_blossom`fusion_b..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.02%)</title><rect x="91.0105%" y="197" width="0.0220%" height="15" fill="rgb(221,106,17)" fg:x="74503" fg:w="18"/><text x="91.2605%" y="207.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module::DualModuleInterface::new (12,259 samples, 14.98%)</title><rect x="76.1745%" y="229" width="14.9752%" height="15" fill="rgb(251,142,44)" fg:x="62358" fg:w="12259"/><text x="76.4245%" y="239.50">fusion_blossom`fusion_b..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (96 samples, 0.12%)</title><rect x="91.0325%" y="213" width="0.1173%" height="15" fill="rgb(238,13,15)" fg:x="74521" fg:w="96"/><text x="91.2825%" y="223.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (64 samples, 0.08%)</title><rect x="93.7773%" y="181" width="0.0782%" height="15" fill="rgb(208,107,27)" fg:x="76768" fg:w="64"/><text x="94.0273%" y="191.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::get_dual_node_index (29 samples, 0.04%)</title><rect x="93.8555%" y="181" width="0.0354%" height="15" fill="rgb(205,136,37)" fg:x="76832" fg:w="29"/><text x="94.1055%" y="191.50"></text></g><g><title>fusion_blossom`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="95.5046%" y="165" width="0.0110%" height="15" fill="rgb(250,205,27)" fg:x="78182" fg:w="9"/><text x="95.7546%" y="175.50"></text></g><g><title>fusion_blossom`DYLD-STUB$$realloc (9 samples, 0.01%)</title><rect x="95.6109%" y="149" width="0.0110%" height="15" fill="rgb(210,80,43)" fg:x="78269" fg:w="9"/><text x="95.8609%" y="159.50"></text></g><g><title>fusion_blossom`__rdl_realloc (9 samples, 0.01%)</title><rect x="95.6732%" y="133" width="0.0110%" height="15" fill="rgb(247,160,36)" fg:x="78320" fg:w="9"/><text x="95.9232%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (60 samples, 0.07%)</title><rect x="95.7477%" y="117" width="0.0733%" height="15" fill="rgb(234,13,49)" fg:x="78381" fg:w="60"/><text x="95.9977%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (154 samples, 0.19%)</title><rect x="95.8906%" y="101" width="0.1881%" height="15" fill="rgb(234,122,0)" fg:x="78498" fg:w="154"/><text x="96.1406%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (95 samples, 0.12%)</title><rect x="95.9627%" y="85" width="0.1160%" height="15" fill="rgb(207,146,38)" fg:x="78557" fg:w="95"/><text x="96.2127%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (344 samples, 0.42%)</title><rect x="95.6842%" y="133" width="0.4202%" height="15" fill="rgb(207,177,25)" fg:x="78329" fg:w="344"/><text x="95.9342%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (232 samples, 0.28%)</title><rect x="95.8210%" y="117" width="0.2834%" height="15" fill="rgb(211,178,42)" fg:x="78441" fg:w="232"/><text x="96.0710%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (21 samples, 0.03%)</title><rect x="96.0788%" y="101" width="0.0257%" height="15" fill="rgb(230,69,54)" fg:x="78652" fg:w="21"/><text x="96.3288%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.01%)</title><rect x="96.1044%" y="133" width="0.0134%" height="15" fill="rgb(214,135,41)" fg:x="78673" fg:w="11"/><text x="96.3544%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (9 samples, 0.01%)</title><rect x="96.1179%" y="133" width="0.0110%" height="15" fill="rgb(237,67,25)" fg:x="78684" fg:w="9"/><text x="96.3679%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.02%)</title><rect x="96.1289%" y="133" width="0.0159%" height="15" fill="rgb(222,189,50)" fg:x="78693" fg:w="13"/><text x="96.3789%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (9 samples, 0.01%)</title><rect x="96.1447%" y="133" width="0.0110%" height="15" fill="rgb(245,148,34)" fg:x="78706" fg:w="9"/><text x="96.3947%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (74 samples, 0.09%)</title><rect x="96.2302%" y="117" width="0.0904%" height="15" fill="rgb(222,29,6)" fg:x="78776" fg:w="74"/><text x="96.4802%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (30 samples, 0.04%)</title><rect x="96.3817%" y="101" width="0.0366%" height="15" fill="rgb(221,189,43)" fg:x="78900" fg:w="30"/><text x="96.6317%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (52 samples, 0.06%)</title><rect x="96.4184%" y="101" width="0.0635%" height="15" fill="rgb(207,36,27)" fg:x="78930" fg:w="52"/><text x="96.6684%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (220 samples, 0.27%)</title><rect x="96.4819%" y="101" width="0.2687%" height="15" fill="rgb(217,90,24)" fg:x="78982" fg:w="220"/><text x="96.7319%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (27 samples, 0.03%)</title><rect x="96.7506%" y="101" width="0.0330%" height="15" fill="rgb(224,66,35)" fg:x="79202" fg:w="27"/><text x="97.0006%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (86 samples, 0.11%)</title><rect x="96.7836%" y="101" width="0.1051%" height="15" fill="rgb(221,13,50)" fg:x="79229" fg:w="86"/><text x="97.0336%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.02%)</title><rect x="97.0133%" y="85" width="0.0208%" height="15" fill="rgb(236,68,49)" fg:x="79417" fg:w="17"/><text x="97.2633%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (29 samples, 0.04%)</title><rect x="97.0340%" y="85" width="0.0354%" height="15" fill="rgb(229,146,28)" fg:x="79434" fg:w="29"/><text x="97.2840%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (120 samples, 0.15%)</title><rect x="97.0695%" y="85" width="0.1466%" height="15" fill="rgb(225,31,38)" fg:x="79463" fg:w="120"/><text x="97.3195%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (72 samples, 0.09%)</title><rect x="97.4420%" y="53" width="0.0880%" height="15" fill="rgb(250,208,3)" fg:x="79768" fg:w="72"/><text x="97.6920%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (314 samples, 0.38%)</title><rect x="97.2503%" y="69" width="0.3836%" height="15" fill="rgb(246,54,23)" fg:x="79611" fg:w="314"/><text x="97.5003%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (85 samples, 0.10%)</title><rect x="97.5300%" y="53" width="0.1038%" height="15" fill="rgb(243,76,11)" fg:x="79840" fg:w="85"/><text x="97.7800%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (460 samples, 0.56%)</title><rect x="97.2160%" y="85" width="0.5619%" height="15" fill="rgb(245,21,50)" fg:x="79583" fg:w="460"/><text x="97.4660%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (118 samples, 0.14%)</title><rect x="97.6338%" y="69" width="0.1441%" height="15" fill="rgb(228,9,43)" fg:x="79925" fg:w="118"/><text x="97.8838%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (880 samples, 1.07%)</title><rect x="96.8887%" y="101" width="1.0750%" height="15" fill="rgb(208,100,47)" fg:x="79315" fg:w="880"/><text x="97.1387%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (152 samples, 0.19%)</title><rect x="97.7780%" y="85" width="0.1857%" height="15" fill="rgb(232,26,8)" fg:x="80043" fg:w="152"/><text x="98.0280%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1,382 samples, 1.69%)</title><rect x="96.3206%" y="117" width="1.6882%" height="15" fill="rgb(216,166,38)" fg:x="78850" fg:w="1382"/><text x="96.5706%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (37 samples, 0.05%)</title><rect x="97.9636%" y="101" width="0.0452%" height="15" fill="rgb(251,202,51)" fg:x="80195" fg:w="37"/><text x="98.2136%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (71 samples, 0.09%)</title><rect x="98.0088%" y="117" width="0.0867%" height="15" fill="rgb(254,216,34)" fg:x="80232" fg:w="71"/><text x="98.2588%" y="127.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (2,034 samples, 2.48%)</title><rect x="95.6268%" y="149" width="2.4847%" height="15" fill="rgb(251,32,27)" fg:x="78282" fg:w="2034"/><text x="95.8768%" y="159.50">fu..</text></g><g><title>libsystem_malloc.dylib`realloc (1,601 samples, 1.96%)</title><rect x="96.1557%" y="133" width="1.9557%" height="15" fill="rgb(208,127,28)" fg:x="78715" fg:w="1601"/><text x="96.4057%" y="143.50">l..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.02%)</title><rect x="98.1115%" y="149" width="0.0244%" height="15" fill="rgb(224,137,22)" fg:x="80316" fg:w="20"/><text x="98.3615%" y="159.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2,155 samples, 2.63%)</title><rect x="95.5156%" y="165" width="2.6325%" height="15" fill="rgb(254,70,32)" fg:x="78191" fg:w="2155"/><text x="95.7656%" y="175.50">fu..</text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.01%)</title><rect x="98.1359%" y="149" width="0.0122%" height="15" fill="rgb(229,75,37)" fg:x="80336" fg:w="10"/><text x="98.3859%" y="159.50"></text></g><g><title>fusion_blossom`alloc::raw_vec::finish_grow (82 samples, 0.10%)</title><rect x="98.1481%" y="165" width="0.1002%" height="15" fill="rgb(252,64,23)" fg:x="80346" fg:w="82"/><text x="98.3981%" y="175.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::get_dual_node_index (103 samples, 0.13%)</title><rect x="98.2483%" y="165" width="0.1258%" height="15" fill="rgb(232,162,48)" fg:x="80428" fg:w="103"/><text x="98.4983%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (43 samples, 0.05%)</title><rect x="98.4474%" y="149" width="0.0525%" height="15" fill="rgb(246,160,12)" fg:x="80591" fg:w="43"/><text x="98.6974%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (105 samples, 0.13%)</title><rect x="98.3741%" y="165" width="0.1283%" height="15" fill="rgb(247,166,0)" fg:x="80531" fg:w="105"/><text x="98.6241%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (193 samples, 0.24%)</title><rect x="98.5097%" y="165" width="0.2358%" height="15" fill="rgb(249,219,21)" fg:x="80642" fg:w="193"/><text x="98.7597%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (156 samples, 0.19%)</title><rect x="98.5549%" y="149" width="0.1906%" height="15" fill="rgb(205,209,3)" fg:x="80679" fg:w="156"/><text x="98.8049%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`madvise (156 samples, 0.19%)</title><rect x="98.5549%" y="133" width="0.1906%" height="15" fill="rgb(243,44,1)" fg:x="80679" fg:w="156"/><text x="98.8049%" y="143.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::prepare_dual_node_growth_single (3,980 samples, 4.86%)</title><rect x="93.8909%" y="181" width="4.8618%" height="15" fill="rgb(206,159,16)" fg:x="76861" fg:w="3980"/><text x="94.1409%" y="191.50">fusion..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (15 samples, 0.02%)</title><rect x="98.7699%" y="181" width="0.0183%" height="15" fill="rgb(244,77,30)" fg:x="80855" fg:w="15"/><text x="99.0199%" y="191.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::grow_dual_node (5,839 samples, 7.13%)</title><rect x="91.6628%" y="197" width="7.1327%" height="15" fill="rgb(218,69,12)" fg:x="75037" fg:w="5839"/><text x="91.9128%" y="207.50">fusion_blo..</text></g><g><title>fusion_blossom`&lt;fusion_blossom::dual_module_serial::DualModuleSerial as fusion_blossom::dual_module::DualModuleImpl&gt;::grow (6,626 samples, 8.09%)</title><rect x="91.1595%" y="213" width="8.0941%" height="15" fill="rgb(212,87,7)" fg:x="74625" fg:w="6626"/><text x="91.4095%" y="223.50">fusion_blos..</text></g><g><title>fusion_blossom`fusion_blossom::dual_module_serial::DualModuleSerial::renew_active_list (368 samples, 0.45%)</title><rect x="98.8041%" y="197" width="0.4495%" height="15" fill="rgb(245,114,25)" fg:x="80883" fg:w="368"/><text x="99.0541%" y="207.50"></text></g><g><title>fusion_blossom`fusion_blossom::dual_module_parallel::DualModuleParallelUnit&lt;SerialModule&gt;::iterative_grow (6,634 samples, 8.10%)</title><rect x="91.1595%" y="229" width="8.1039%" height="15" fill="rgb(210,61,42)" fg:x="74625" fg:w="6634"/><text x="91.4095%" y="239.50">fusion_blos..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.02%)</title><rect x="99.5004%" y="181" width="0.0220%" height="15" fill="rgb(211,52,33)" fg:x="81453" fg:w="18"/><text x="99.7504%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (78 samples, 0.10%)</title><rect x="99.7178%" y="149" width="0.0953%" height="15" fill="rgb(234,58,33)" fg:x="81631" fg:w="78"/><text x="99.9678%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (259 samples, 0.32%)</title><rect x="99.5737%" y="165" width="0.3164%" height="15" fill="rgb(220,115,36)" fg:x="81513" fg:w="259"/><text x="99.8237%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (63 samples, 0.08%)</title><rect x="99.8131%" y="149" width="0.0770%" height="15" fill="rgb(243,153,54)" fg:x="81709" fg:w="63"/><text x="100.0631%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (383 samples, 0.47%)</title><rect x="99.4479%" y="197" width="0.4679%" height="15" fill="rgb(251,47,18)" fg:x="81410" fg:w="383"/><text x="99.6979%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (322 samples, 0.39%)</title><rect x="99.5224%" y="181" width="0.3933%" height="15" fill="rgb(242,102,42)" fg:x="81471" fg:w="322"/><text x="99.7724%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (21 samples, 0.03%)</title><rect x="99.8901%" y="165" width="0.0257%" height="15" fill="rgb(234,31,38)" fg:x="81772" fg:w="21"/><text x="100.1401%" y="175.50"></text></g><g><title>fusion_blossom`&lt;fusion_blossom::primal_module_serial::PrimalModuleSerial as fusion_blossom::primal_module::PrimalModuleImpl&gt;::load_defect_dual_node (481 samples, 0.59%)</title><rect x="99.3391%" y="213" width="0.5876%" height="15" fill="rgb(221,117,51)" fg:x="81321" fg:w="481"/><text x="99.5891%" y="223.50"></text></g><g><title>fusion_blossom`fusion_blossom::primal_module::PrimalModuleImpl::load (554 samples, 0.68%)</title><rect x="99.2634%" y="229" width="0.6767%" height="15" fill="rgb(212,20,18)" fg:x="81259" fg:w="554"/><text x="99.5134%" y="239.50"></text></g><g><title>fusion_blossom`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (59,561 samples, 72.76%)</title><rect x="27.2312%" y="341" width="72.7578%" height="15" fill="rgb(245,133,36)" fg:x="22292" fg:w="59561"/><text x="27.4812%" y="351.50">fusion_blossom`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute</text></g><g><title>fusion_blossom`std::panicking::try (52,262 samples, 63.84%)</title><rect x="36.1474%" y="325" width="63.8416%" height="15" fill="rgb(212,6,19)" fg:x="29591" fg:w="52262"/><text x="36.3974%" y="335.50">fusion_blossom`std::panicking::try</text></g><g><title>fusion_blossom`rayon_core::registry::in_worker (52,262 samples, 63.84%)</title><rect x="36.1474%" y="309" width="63.8416%" height="15" fill="rgb(218,1,36)" fg:x="29591" fg:w="52262"/><text x="36.3974%" y="319.50">fusion_blossom`rayon_core::registry::in_worker</text></g><g><title>fusion_blossom`rayon_core::scope::ScopeBase::complete (52,262 samples, 63.84%)</title><rect x="36.1474%" y="293" width="63.8416%" height="15" fill="rgb(246,84,54)" fg:x="29591" fg:w="52262"/><text x="36.3974%" y="303.50">fusion_blossom`rayon_core::scope::ScopeBase::complete</text></g><g><title>fusion_blossom`std::panicking::try (52,262 samples, 63.84%)</title><rect x="36.1474%" y="277" width="63.8416%" height="15" fill="rgb(242,110,6)" fg:x="29591" fg:w="52262"/><text x="36.3974%" y="287.50">fusion_blossom`std::panicking::try</text></g><g><title>fusion_blossom`fusion_blossom::primal_module_parallel::_&lt;impl fusion_blossom::util::ArcRwLock&lt;fusion_blossom::primal_module_parallel::PrimalModuleParallelUnit&gt;&gt;::iterative_solve_step_callback (52,262 samples, 63.84%)</title><rect x="36.1474%" y="261" width="63.8416%" height="15" fill="rgb(214,47,5)" fg:x="29591" fg:w="52262"/><text x="36.3974%" y="271.50">fusion_blossom`fusion_blossom::primal_module_parallel::_&lt;impl fusion_blossom::util::ArcRwLock&lt;fusion_bloss..</text></g><g><title>fusion_blossom`fusion_blossom::primal_module::PrimalModuleImpl::solve_step_callback (52,261 samples, 63.84%)</title><rect x="36.1486%" y="245" width="63.8404%" height="15" fill="rgb(218,159,25)" fg:x="29592" fg:w="52261"/><text x="36.3986%" y="255.50">fusion_blossom`fusion_blossom::primal_module::PrimalModuleImpl::solve_step_callback</text></g><g><title>fusion_blossom`fusion_blossom::primal_module_serial::PrimalModuleSerial::get_primal_node_internal_ptr_option (34 samples, 0.04%)</title><rect x="99.9475%" y="229" width="0.0415%" height="15" fill="rgb(215,211,28)" fg:x="81819" fg:w="34"/><text x="100.1975%" y="239.50"></text></g><g><title>fusion_blossom`rayon_core::registry::WorkerThread::wait_until_cold (59,572 samples, 72.77%)</title><rect x="27.2263%" y="357" width="72.7712%" height="15" fill="rgb(238,59,32)" fg:x="22288" fg:w="59572"/><text x="27.4763%" y="367.50">fusion_blossom`rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>fusion_blossom`std::sys_common::backtrace::__rust_begin_short_backtrace (59,573 samples, 72.77%)</title><rect x="27.2263%" y="389" width="72.7725%" height="15" fill="rgb(226,82,3)" fg:x="22288" fg:w="59573"/><text x="27.4763%" y="399.50">fusion_blossom`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>fusion_blossom`rayon_core::registry::ThreadBuilder::run (59,573 samples, 72.77%)</title><rect x="27.2263%" y="373" width="72.7725%" height="15" fill="rgb(240,164,32)" fg:x="22288" fg:w="59573"/><text x="27.4763%" y="383.50">fusion_blossom`rayon_core::registry::ThreadBuilder::run</text></g><g><title>all (81,862 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(232,46,7)" fg:x="0" fg:w="81862"/><text x="0.2500%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (59,574 samples, 72.77%)</title><rect x="27.2263%" y="453" width="72.7737%" height="15" fill="rgb(229,129,53)" fg:x="22288" fg:w="59574"/><text x="27.4763%" y="463.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (59,574 samples, 72.77%)</title><rect x="27.2263%" y="437" width="72.7737%" height="15" fill="rgb(234,188,29)" fg:x="22288" fg:w="59574"/><text x="27.4763%" y="447.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>fusion_blossom`std::sys::unix::thread::Thread::new::thread_start (59,574 samples, 72.77%)</title><rect x="27.2263%" y="421" width="72.7737%" height="15" fill="rgb(246,141,4)" fg:x="22288" fg:w="59574"/><text x="27.4763%" y="431.50">fusion_blossom`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>fusion_blossom`core::ops::function::FnOnce::call_once{{vtable.shim}} (59,574 samples, 72.77%)</title><rect x="27.2263%" y="405" width="72.7737%" height="15" fill="rgb(229,23,39)" fg:x="22288" fg:w="59574"/><text x="27.4763%" y="415.50">fusion_blossom`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g></svg></svg>