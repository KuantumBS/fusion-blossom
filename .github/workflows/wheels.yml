name: Build Python Binding

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request: {}

jobs:  # Workflow credit to https://github.com/samuelcolvin/rtoml/blob/main/.github/workflows/ci.yml
  # Yue: I use cibuildwheel to start multiple dockers with different targets, and use maturin to actually generate the wheel

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - macos
          - windows
        include:
          - os: ubuntu
            platform: linux
          - os: windows
            ls: dir
    runs-on: ${{ format('{0}-latest', matrix.os) }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3

      - name: Install Rust
        if: matrix.os != 'ubuntu'  # unnecessary for ubuntu because it's installed inside cibuildwheel
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Install Python dependencies
        run: python -m pip install -U setuptools wheel twine cibuildwheel cffi

      - name: Build Wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp3*-*"
          CIBW_SKIP: "*-win32 *_i686"  # do not build for 32bit machines, rustc seems to complain about it
          CIBW_PLATFORM: ${{ matrix.platform || matrix.os }}  # only build for specific platform
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH"'
          CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
          CIBW_MANYLINUX_X86_64_IMAGE: 'manylinux2014'
          CIBW_BEFORE_BUILD: >
            rustup default nightly &&
            rustup show
          CIBW_BEFORE_BUILD_LINUX: >
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y &&
            rustup show

      - name: Build windows 32bit wheels
        if: matrix.os == 'windows'
        run: cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: 'cp3*-win32'
          CIBW_PLATFORM: windows
          CIBW_ENVIRONMENT: 'PATH="$UserProfile\.cargo\bin;$PATH"'
          CIBW_BEFORE_BUILD: >
            rustup toolchain install nightly-i686-pc-windows-msvc &&
            rustup default nightly-i686-pc-windows-msvc &&
            rustup override set nightly-i686-pc-windows-msvc &&
            rustup show

      - name: list wheel files
        run: ${{ matrix.ls || 'ls -lh' }} wheelhouse/

      - name: twine check
        run: twine check wheelhouse/*

      - uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  # build_sdist:
  #   name: Build source distribution
  #   runs-on: ubuntu-latest

  #   - uses: actions/checkout@v3

  #   - uses: actions/setup-python@v3

  #   - name: Install Python dependencies
  #     run: python -m pip install -U maturin cffi

  #   - uses: actions/upload-artifact@v3
  #     with:
  #       path: ./wheelhouse/*.tar.gz


  # upload_pypi:
  #   needs: [build_wheels, build_sdist]
